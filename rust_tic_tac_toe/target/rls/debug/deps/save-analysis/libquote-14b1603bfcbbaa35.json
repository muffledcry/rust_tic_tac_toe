{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15","program":"/home/gitpod/.rustup/toolchains/1.48.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","quote","/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=14b1603bfcbbaa35","-C","extra-filename=-14b1603bfcbbaa35","--out-dir","/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps","-L","dependency=/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/gitpod/.rustup/toolchains/1.48.0-x86_64-unknown-linux-gnu"],"output":"/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps/libquote-14b1603bfcbbaa35.rmeta"},"prelude":{"crate_id":{"name":"quote","disambiguator":[15786243928909181211,17304382871334957626]},"crate_root":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src","external_crates":[{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}}],"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":0,"byte_end":7040,"line_start":1,"line_end":252,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1948,"byte_end":1954,"line_start":62,"line_end":62,"column_start":17,"column_end":23},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1992,"byte_end":2000,"line_start":65,"line_end":65,"column_start":21,"column_end":29},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":2002,"byte_end":2009,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"alias_span":null,"name":"ByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":2002,"byte_end":2009,"line_start":65,"line_end":65,"column_start":31,"column_end":38},"alias_span":null,"name":"ByteStr","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":65,"line_end":65,"column_start":40,"column_end":43},"alias_span":null,"name":"Hex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":2011,"byte_end":2014,"line_start":65,"line_end":65,"column_start":40,"column_end":43},"alias_span":null,"name":"Hex","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":425},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":2044,"byte_end":2049,"line_start":68,"line_end":68,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":0,"byte_end":7040,"line_start":1,"line_end":252,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":454},{"krate":0,"index":78},{"krate":0,"index":456},{"krate":0,"index":79},{"krate":0,"index":105}],"decl_id":null,"docs":" Quasi-quoting without a Syntex dependency, intended for use with [Macros\n 1.1](https://github.com/rust-lang/rfcs/blob/master/text/1681-macros-1.1.md).","sig":null,"attributes":[{"value":"/ Quasi-quoting without a Syntex dependency, intended for use with [Macros","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ 1.1](https://github.com/rust-lang/rfcs/blob/master/text/1681-macros-1.1.md).","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":77,"byte_end":157,"line_start":2,"line_end":2,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":158,"byte_end":161,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":162,"byte_end":173,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":174,"byte_end":192,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/ quote = \"0.3\"","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":193,"byte_end":210,"line_start":6,"line_end":6,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":211,"byte_end":218,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":219,"byte_end":222,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":223,"byte_end":241,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"/ #[macro_use]","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":242,"byte_end":258,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/ extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":259,"byte_end":282,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":283,"byte_end":290,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":291,"byte_end":294,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Interpolation is done with `#var`:","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":295,"byte_end":333,"line_start":14,"line_end":14,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":334,"byte_end":337,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":338,"byte_end":349,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ let tokens = quote! {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":350,"byte_end":375,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/     struct SerializeWith #generics #where_clause {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":376,"byte_end":430,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/         value: &'a #field_ty,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":431,"byte_end":464,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/         phantom: ::std::marker::PhantomData<#item_ty>,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":465,"byte_end":523,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":524,"byte_end":533,"line_start":21,"line_end":21,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":534,"byte_end":537,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     impl #generics serde::Serialize for SerializeWith #generics #where_clause {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":538,"byte_end":621,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/         fn serialize<S>(&self, s: &mut S) -> Result<(), S::Error>","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":622,"byte_end":691,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/             where S: serde::Serializer","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":692,"byte_end":734,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/         {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":735,"byte_end":748,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/             #path(self.value, s)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":749,"byte_end":785,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":786,"byte_end":799,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":800,"byte_end":809,"line_start":29,"line_end":29,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":810,"byte_end":813,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     SerializeWith {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":814,"byte_end":837,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/         value: #value,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":838,"byte_end":864,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/         phantom: ::std::marker::PhantomData::<#item_ty>,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":865,"byte_end":925,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":926,"byte_end":935,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":936,"byte_end":942,"line_start":35,"line_end":35,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":943,"byte_end":950,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":951,"byte_end":954,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Repetition is done using `#(...)*` or `#(...),*` very similar to `macro_rules!`:","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":955,"byte_end":1039,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - `#(#var)*` - no separators","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1044,"byte_end":1076,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"/ - `#(#var),*` - the character before the asterisk is used as a separator","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1077,"byte_end":1153,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ - `#( struct #var; )*` - the repetition can contain other things","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1154,"byte_end":1222,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ - `#( #k => println!(\"{}\", #v), )*` - even multiple interpolations","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1223,"byte_end":1293,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1294,"byte_end":1297,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The return type of `quote!` is `quote::Tokens`. Tokens can be interpolated into","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1298,"byte_end":1381,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"/ other quotes:","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1382,"byte_end":1399,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1400,"byte_end":1403,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1404,"byte_end":1415,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/ let t = quote! { /* ... */ };","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1416,"byte_end":1449,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ return quote! { /* ... */ #t /* ... */ };","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1450,"byte_end":1495,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1496,"byte_end":1503,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1504,"byte_end":1507,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Call `to_string()` or `as_str()` on a Tokens to get a `String` or `&str` of Rust","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1508,"byte_end":1592,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/ code.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1593,"byte_end":1602,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1603,"byte_end":1606,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `quote!` macro relies on deep recursion so some large invocations may fail","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1607,"byte_end":1689,"line_start":56,"line_end":56,"column_start":1,"column_end":83}},{"value":"/ with \"recursion limit reached\" when you compile. If it fails, bump up the","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1690,"byte_end":1767,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ recursion limit by adding `#![recursion_limit = \"128\"]` to your crate. An even","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1768,"byte_end":1850,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ higher limit may be necessary for especially large invocations.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/lib.rs","byte_start":1851,"byte_end":1918,"line_start":59,"line_end":59,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7219,"byte_end":7225,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::tokens::Tokens","value":"","parent":null,"children":[],"decl_id":null,"docs":" Tokens produced by a `quote!(...)` invocation.\n","sig":null,"attributes":[{"value":"/ Tokens produced by a `quote!(...)` invocation.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7118,"byte_end":7168,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7283,"byte_end":7286,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<Tokens>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Empty tokens.\n","sig":null,"attributes":[{"value":"/ Empty tokens.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7254,"byte_end":7271,"line_start":10,"line_end":10,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7874,"byte_end":7880,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"append","qualname":"<Tokens>::append","value":"pub fn append<T: AsRef<str>>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7340,"byte_end":7382,"line_start":15,"line_end":15,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7387,"byte_end":7390,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7395,"byte_end":7402,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7407,"byte_end":7445,"line_start":18,"line_end":18,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7450,"byte_end":7486,"line_start":19,"line_end":19,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7491,"byte_end":7508,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7513,"byte_end":7526,"line_start":21,"line_end":21,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7531,"byte_end":7534,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7539,"byte_end":7564,"line_start":23,"line_end":23,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7569,"byte_end":7619,"line_start":24,"line_end":24,"column_start":5,"column_end":55}},{"value":"/         tokens.append(\"a\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7624,"byte_end":7655,"line_start":25,"line_end":25,"column_start":5,"column_end":36}},{"value":"/         tokens.append(\"b\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7660,"byte_end":7691,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/         tokens.append(\"c\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7696,"byte_end":7727,"line_start":27,"line_end":27,"column_start":5,"column_end":36}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7732,"byte_end":7741,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7746,"byte_end":7751,"line_start":29,"line_end":29,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7756,"byte_end":7759,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7764,"byte_end":7792,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.as_str(), \"a b c\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7797,"byte_end":7838,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7843,"byte_end":7850,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7855,"byte_end":7862,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8555,"byte_end":8565,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"append_all","qualname":"<Tokens>::append_all","value":"pub fn append_all<T, I>(&mut Self, I) where T: ToTokens, I: IntoIterator<Item\n= T>","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8073,"byte_end":8115,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8120,"byte_end":8123,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8128,"byte_end":8135,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8140,"byte_end":8178,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8183,"byte_end":8219,"line_start":46,"line_end":46,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8224,"byte_end":8241,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8246,"byte_end":8259,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8264,"byte_end":8267,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8272,"byte_end":8297,"line_start":50,"line_end":50,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8302,"byte_end":8352,"line_start":51,"line_end":51,"column_start":5,"column_end":55}},{"value":"/         tokens.append_all(&[true, false]);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8357,"byte_end":8403,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8408,"byte_end":8417,"line_start":53,"line_end":53,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8422,"byte_end":8427,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8432,"byte_end":8435,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8440,"byte_end":8468,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.as_str(), \"true false\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8473,"byte_end":8519,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8524,"byte_end":8531,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8536,"byte_end":8543,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9244,"byte_end":9260,"line_start":87,"line_end":87,"column_start":12,"column_end":28},"name":"append_separated","qualname":"<Tokens>::append_separated","value":"pub fn append_separated<T, I, S: AsRef<str>>(&mut Self, I, S) where\nT: ToTokens, I: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8749,"byte_end":8791,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8796,"byte_end":8799,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8804,"byte_end":8811,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8816,"byte_end":8854,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8859,"byte_end":8895,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8900,"byte_end":8917,"line_start":74,"line_end":74,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8922,"byte_end":8935,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8940,"byte_end":8943,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8948,"byte_end":8973,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":8978,"byte_end":9028,"line_start":78,"line_end":78,"column_start":5,"column_end":55}},{"value":"/         tokens.append_separated(&[true, false], \",\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9033,"byte_end":9090,"line_start":79,"line_end":79,"column_start":5,"column_end":62}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9095,"byte_end":9104,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9109,"byte_end":9114,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9119,"byte_end":9122,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9127,"byte_end":9155,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.as_str(), \"true , false\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9160,"byte_end":9208,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9213,"byte_end":9220,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9225,"byte_end":9232,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10074,"byte_end":10091,"line_start":117,"line_end":117,"column_start":12,"column_end":29},"name":"append_terminated","qualname":"<Tokens>::append_terminated","value":"pub fn append_terminated<T, I, S: AsRef<str>>(&mut Self, I, S) where\nT: ToTokens, I: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" For use by `ToTokens` implementations.","sig":null,"attributes":[{"value":"/ For use by `ToTokens` implementations.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9576,"byte_end":9618,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9623,"byte_end":9626,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9631,"byte_end":9638,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9643,"byte_end":9681,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/ # use quote::{Tokens, ToTokens};","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9686,"byte_end":9722,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/ # fn main() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9727,"byte_end":9744,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/ struct X;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9749,"byte_end":9762,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9767,"byte_end":9770,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for X {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9775,"byte_end":9800,"line_start":107,"line_end":107,"column_start":5,"column_end":30}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9805,"byte_end":9855,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/         tokens.append_terminated(&[true, false], \",\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9860,"byte_end":9918,"line_start":109,"line_end":109,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9923,"byte_end":9932,"line_start":110,"line_end":110,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9937,"byte_end":9942,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9947,"byte_end":9950,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let tokens = quote!(#X);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9955,"byte_end":9983,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(tokens.as_str(), \"true , false ,\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":9988,"byte_end":10038,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/ # }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10043,"byte_end":10050,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10055,"byte_end":10062,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10346,"byte_end":10352,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Tokens>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10404,"byte_end":10415,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Tokens>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10467,"byte_end":10472,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"parse","qualname":"<Tokens>::parse","value":"pub fn parse<T: FromStr>(&Self) -> Result<T, T::Err>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":10994,"byte_end":11002,"line_start":6,"line_end":6,"column_start":11,"column_end":19},"name":"ToTokens","qualname":"::to_tokens::ToTokens","value":"ToTokens","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" Types that can be interpolated inside a `quote!(...)` invocation.\n","sig":null,"attributes":[{"value":"/ Types that can be interpolated inside a `quote!(...)` invocation.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":10914,"byte_end":10983,"line_start":5,"line_end":5,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11685,"byte_end":11694,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"to_tokens","qualname":"::to_tokens::ToTokens::to_tokens","value":"pub fn to_tokens(&Self, &mut Tokens)","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Write `self` to the given `Tokens`.","sig":null,"attributes":[{"value":"/ Write `self` to the given `Tokens`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11009,"byte_end":11048,"line_start":7,"line_end":7,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11053,"byte_end":11056,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ Example implementation for a struct representing Rust paths like","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11061,"byte_end":11129,"line_start":9,"line_end":9,"column_start":5,"column_end":73}},{"value":"/ `std::cmp::PartialEq`:","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11134,"byte_end":11160,"line_start":10,"line_end":10,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11165,"byte_end":11168,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11173,"byte_end":11186,"line_start":12,"line_end":12,"column_start":5,"column_end":18}},{"value":"/ pub struct Path {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11191,"byte_end":11212,"line_start":13,"line_end":13,"column_start":5,"column_end":26}},{"value":"/     pub global: bool,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11217,"byte_end":11242,"line_start":14,"line_end":14,"column_start":5,"column_end":30}},{"value":"/     pub segments: Vec<PathSegment>,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11247,"byte_end":11286,"line_start":15,"line_end":15,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11291,"byte_end":11296,"line_start":16,"line_end":16,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11301,"byte_end":11304,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ impl ToTokens for Path {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11309,"byte_end":11337,"line_start":18,"line_end":18,"column_start":5,"column_end":33}},{"value":"/     fn to_tokens(&self, tokens: &mut Tokens) {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11342,"byte_end":11392,"line_start":19,"line_end":19,"column_start":5,"column_end":55}},{"value":"/         for (i, segment) in self.segments.iter().enumerate() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11397,"byte_end":11463,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/             if i > 0 || self.global {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11468,"byte_end":11509,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/                 tokens.append(\"::\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11514,"byte_end":11554,"line_start":22,"line_end":22,"column_start":5,"column_end":45}},{"value":"/             }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11559,"byte_end":11576,"line_start":23,"line_end":23,"column_start":5,"column_end":22}},{"value":"/             segment.to_tokens(tokens);","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11581,"byte_end":11623,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/         }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11628,"byte_end":11641,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11646,"byte_end":11655,"line_start":26,"line_end":26,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11660,"byte_end":11665,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11670,"byte_end":11677,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":13252,"byte_end":13259,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ByteStr","qualname":"::to_tokens::ByteStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.\n","sig":null,"attributes":[{"value":"/ Wrap a `&str` so it interpolates as a byte-string: `b\"abc\"`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":13159,"byte_end":13223,"line_start":90,"line_end":90,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":13264,"byte_end":13275,"line_start":92,"line_end":92,"column_start":24,"column_end":35},"name":"0","qualname":"::to_tokens::ByteStr::0","value":"&'a str","parent":{"krate":0,"index":125},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":14364,"byte_end":14367,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"Hex","qualname":"::to_tokens::Hex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrap an integer so it interpolates as a hexadecimal.\n","sig":null,"attributes":[{"value":"/ Wrap an integer so it interpolates as a hexadecimal.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":14279,"byte_end":14335,"line_start":128,"line_end":128,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":139},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":14371,"byte_end":14376,"line_start":130,"line_end":130,"column_start":19,"column_end":24},"name":"0","qualname":"::to_tokens::Hex::0","value":"T","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":425},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19572,"byte_end":19577,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" An identifier that should be interpolated without quotes.\n","sig":null,"attributes":[{"value":"/ An identifier that should be interpolated without quotes.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19465,"byte_end":19526,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19612,"byte_end":19615,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"pub fn new<T: Into<Ident>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7241,"byte_end":7247,"line_start":9,"line_end":9,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10576,"byte_end":10582,"line_start":140,"line_end":140,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10660,"byte_end":10666,"line_start":146,"line_end":146,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10806,"byte_end":10812,"line_start":152,"line_end":152,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11917,"byte_end":11920,"line_start":38,"line_end":38,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12062,"byte_end":12065,"line_start":44,"line_end":44,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12194,"byte_end":12200,"line_start":50,"line_end":50,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12798,"byte_end":12804,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":13301,"byte_end":13308,"line_start":94,"line_end":94,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":16782,"byte_end":16785,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19593,"byte_end":19598,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19701,"byte_end":19706,"line_start":15,"line_end":15,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19809,"byte_end":19814,"line_start":21,"line_end":21,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19917,"byte_end":19922,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20004,"byte_end":20009,"line_start":33,"line_end":33,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20090,"byte_end":20095,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20248,"byte_end":20253,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20378,"byte_end":20383,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":7241,"byte_end":7247,"line_start":9,"line_end":9,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10576,"byte_end":10582,"line_start":140,"line_end":140,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10660,"byte_end":10666,"line_start":146,"line_end":146,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/tokens.rs","byte_start":10806,"byte_end":10812,"line_start":152,"line_end":152,"column_start":21,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":11917,"byte_end":11920,"line_start":38,"line_end":38,"column_start":55,"column_end":58},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":340},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12062,"byte_end":12065,"line_start":44,"line_end":44,"column_start":41,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12194,"byte_end":12200,"line_start":50,"line_end":50,"column_start":32,"column_end":38},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":31731},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":12798,"byte_end":12804,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":13301,"byte_end":13308,"line_start":94,"line_end":94,"column_start":23,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":125},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/to_tokens.rs","byte_start":16782,"byte_end":16785,"line_start":207,"line_end":207,"column_start":32,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19593,"byte_end":19598,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19701,"byte_end":19706,"line_start":15,"line_end":15,"column_start":28,"column_end":33},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19809,"byte_end":19814,"line_start":21,"line_end":21,"column_start":33,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":19917,"byte_end":19922,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20004,"byte_end":20009,"line_start":33,"line_end":33,"column_start":21,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20090,"byte_end":20095,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20248,"byte_end":20253,"line_start":45,"line_end":45,"column_start":34,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":425},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/quote-0.3.15/src/ident.rs","byte_start":20378,"byte_end":20383,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":425},"to":{"krate":0,"index":38}}]}