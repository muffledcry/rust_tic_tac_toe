{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11","program":"/home/gitpod/.rustup/toolchains/1.48.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","syn","/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"parsing\"","--cfg","feature=\"printing\"","--cfg","feature=\"quote\"","--cfg","feature=\"synom\"","--cfg","feature=\"unicode-xid\"","-C","metadata=16bc2477e70e5de0","-C","extra-filename=-16bc2477e70e5de0","--out-dir","/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps","-L","dependency=/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps","--extern","quote=/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps/libquote-14b1603bfcbbaa35.rmeta","--extern","synom=/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps/libsynom-1163523609a2366e.rmeta","--extern","unicode_xid=/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps/libunicode_xid-25a774d71fc26e57.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/gitpod/.rustup/toolchains/1.48.0-x86_64-unknown-linux-gnu"],"output":"/workspace/rust_tic_tac_toe/rust_tic_tac_toe/target/rls/debug/deps/libsyn-16bc2477e70e5de0.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[8275547996860572530,5620301592074941451]},"crate_root":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src","external_crates":[{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":18,"id":{"name":"quote","disambiguator":[15786243928909181211,17304382871334957626]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":19,"id":{"name":"unicode_xid","disambiguator":[12624775606102846639,17566460495296664980]}},{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","num":20,"id":{"name":"synom","disambiguator":[2892575106162097324,5478110741760147625]}}],"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":0,"byte_end":6307,"line_start":1,"line_end":211,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":359,"byte_end":368,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":370,"byte_end":379,"line_start":19,"line_end":19,"column_start":27,"column_end":36},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":381,"byte_end":389,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"alias_span":null,"name":"MetaItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":391,"byte_end":405,"line_start":19,"line_end":19,"column_start":48,"column_end":62},"alias_span":null,"name":"NestedMetaItem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":441,"byte_end":450,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"alias_span":null,"name":"ConstExpr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":478,"byte_end":483,"line_start":25,"line_end":25,"column_start":16,"column_end":21},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":485,"byte_end":492,"line_start":25,"line_end":25,"column_start":23,"column_end":30},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":494,"byte_end":505,"line_start":25,"line_end":25,"column_start":32,"column_end":43},"alias_span":null,"name":"VariantData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":507,"byte_end":517,"line_start":25,"line_end":25,"column_start":45,"column_end":55},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":806,"byte_end":814,"line_start":37,"line_end":37,"column_start":20,"column_end":28},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":816,"byte_end":824,"line_start":37,"line_end":37,"column_start":30,"column_end":38},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":826,"byte_end":837,"line_start":37,"line_end":37,"column_start":40,"column_end":51},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":839,"byte_end":857,"line_start":37,"line_end":37,"column_start":53,"column_end":71},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":856},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":859,"byte_end":866,"line_start":37,"line_end":37,"column_start":73,"column_end":80},"alias_span":null,"name":"TyParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":875},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":868,"byte_end":880,"line_start":37,"line_end":37,"column_start":82,"column_end":94},"alias_span":null,"name":"TyParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":958},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":901,"byte_end":920,"line_start":38,"line_end":38,"column_start":20,"column_end":39},"alias_span":null,"name":"WhereBoundPredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":922,"byte_end":933,"line_start":38,"line_end":38,"column_start":41,"column_end":52},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":993},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":935,"byte_end":951,"line_start":38,"line_end":38,"column_start":54,"column_end":70},"alias_span":null,"name":"WhereEqPredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":934},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":953,"byte_end":967,"line_start":38,"line_end":38,"column_start":72,"column_end":86},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":988,"byte_end":1008,"line_start":39,"line_end":39,"column_start":20,"column_end":40},"alias_span":null,"name":"WhereRegionPredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":793},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1059,"byte_end":1071,"line_start":41,"line_end":41,"column_start":20,"column_end":32},"alias_span":null,"name":"ImplGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1073,"byte_end":1082,"line_start":41,"line_end":41,"column_start":34,"column_end":43},"alias_span":null,"name":"Turbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":800},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1084,"byte_end":1094,"line_start":41,"line_end":41,"column_start":45,"column_end":55},"alias_span":null,"name":"TyGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1025},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1124,"byte_end":1129,"line_start":44,"line_end":44,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1542,"byte_end":1549,"line_start":59,"line_end":59,"column_start":15,"column_end":22},"alias_span":null,"name":"FloatTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1107},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1551,"byte_end":1556,"line_start":59,"line_end":59,"column_start":24,"column_end":29},"alias_span":null,"name":"IntTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1046},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1558,"byte_end":1561,"line_start":59,"line_end":59,"column_start":31,"column_end":34},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1086},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1563,"byte_end":1571,"line_start":59,"line_end":59,"column_start":36,"column_end":44},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1196},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1616,"byte_end":1626,"line_start":61,"line_end":61,"column_start":15,"column_end":25},"alias_span":null,"name":"ByteStrLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1628,"byte_end":1636,"line_start":61,"line_end":61,"column_start":27,"column_end":35},"alias_span":null,"name":"FloatLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1203},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1638,"byte_end":1644,"line_start":61,"line_end":61,"column_start":37,"column_end":43},"alias_span":null,"name":"IntLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1646,"byte_end":1652,"line_start":61,"line_end":61,"column_start":45,"column_end":51},"alias_span":null,"name":"StrLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1393},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1679,"byte_end":1689,"line_start":64,"line_end":64,"column_start":15,"column_end":25},"alias_span":null,"name":"BinOpToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1428},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1691,"byte_end":1701,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"alias_span":null,"name":"DelimToken","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1703,"byte_end":1712,"line_start":64,"line_end":64,"column_start":39,"column_end":48},"alias_span":null,"name":"Delimited","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1253},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1714,"byte_end":1717,"line_start":64,"line_end":64,"column_start":50,"column_end":53},"alias_span":null,"name":"Mac","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1308},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1719,"byte_end":1724,"line_start":64,"line_end":64,"column_start":55,"column_end":60},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1270},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1726,"byte_end":1735,"line_start":64,"line_end":64,"column_start":62,"column_end":71},"alias_span":null,"name":"TokenTree","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1531},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1768,"byte_end":1772,"line_start":67,"line_end":67,"column_start":18,"column_end":22},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1511},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1774,"byte_end":1785,"line_start":67,"line_end":67,"column_start":24,"column_end":35},"alias_span":null,"name":"DeriveInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1902,"byte_end":1907,"line_start":73,"line_end":73,"column_start":14,"column_end":19},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1909,"byte_end":1913,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1938,"byte_end":1941,"line_start":76,"line_end":76,"column_start":14,"column_end":17},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1796},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1943,"byte_end":1970,"line_start":76,"line_end":76,"column_start":19,"column_end":46},"alias_span":null,"name":"AngleBracketedParameterData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1944},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1972,"byte_end":1981,"line_start":76,"line_end":76,"column_start":48,"column_end":57},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1884},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1983,"byte_end":1991,"line_start":76,"line_end":76,"column_start":59,"column_end":67},"alias_span":null,"name":"BareFnTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1993,"byte_end":2006,"line_start":76,"line_end":76,"column_start":69,"column_end":82},"alias_span":null,"name":"FunctionRetTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1705},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2008,"byte_end":2013,"line_start":76,"line_end":76,"column_start":84,"column_end":89},"alias_span":null,"name":"MutTy","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1722},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2028,"byte_end":2038,"line_start":77,"line_end":77,"column_start":14,"column_end":24},"alias_span":null,"name":"Mutability","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2040,"byte_end":2066,"line_start":77,"line_end":77,"column_start":26,"column_end":52},"alias_span":null,"name":"ParenthesizedParameterData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1741},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2068,"byte_end":2072,"line_start":77,"line_end":77,"column_start":54,"column_end":58},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1775},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2074,"byte_end":2088,"line_start":77,"line_end":77,"column_start":60,"column_end":74},"alias_span":null,"name":"PathParameters","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1758},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2090,"byte_end":2101,"line_start":77,"line_end":77,"column_start":76,"column_end":87},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2116,"byte_end":2128,"line_start":78,"line_end":78,"column_start":14,"column_end":26},"alias_span":null,"name":"PolyTraitRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2130,"byte_end":2135,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2137,"byte_end":2139,"line_start":78,"line_end":78,"column_start":35,"column_end":37},"alias_span":null,"name":"Ty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2141,"byte_end":2152,"line_start":78,"line_end":78,"column_start":39,"column_end":50},"alias_span":null,"name":"TypeBinding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1905},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2154,"byte_end":2162,"line_start":78,"line_end":78,"column_start":52,"column_end":60},"alias_span":null,"name":"Unsafety","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2293,"byte_end":2294,"line_start":87,"line_end":87,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":59},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5897,"byte_end":5904,"line_start":194,"line_end":194,"column_start":20,"column_end":27},"alias_span":null,"name":"IResult","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6080,"byte_end":6083,"line_start":202,"line_end":202,"column_start":28,"column_end":31},"alias_span":null,"name":"lit","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6085,"byte_end":6091,"line_start":202,"line_end":202,"column_start":33,"column_end":39},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1229},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6093,"byte_end":6104,"line_start":202,"line_end":202,"column_start":41,"column_end":52},"alias_span":null,"name":"byte_string","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1232},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6106,"byte_end":6110,"line_start":202,"line_end":202,"column_start":54,"column_end":58},"alias_span":null,"name":"byte","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6112,"byte_end":6121,"line_start":202,"line_end":202,"column_start":60,"column_end":69},"alias_span":null,"name":"character","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6123,"byte_end":6128,"line_start":202,"line_end":202,"column_start":71,"column_end":76},"alias_span":null,"name":"float","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1238},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6130,"byte_end":6133,"line_start":202,"line_end":202,"column_start":78,"column_end":81},"alias_span":null,"name":"int","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1250},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6135,"byte_end":6142,"line_start":202,"line_end":202,"column_start":83,"column_end":90},"alias_span":null,"name":"boolean","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1981},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6172,"byte_end":6174,"line_start":204,"line_end":204,"column_start":27,"column_end":29},"alias_span":null,"name":"ty","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6176,"byte_end":6180,"line_start":204,"line_end":204,"column_start":31,"column_end":35},"alias_span":null,"name":"path","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1455},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6210,"byte_end":6220,"line_start":206,"line_end":206,"column_start":27,"column_end":37},"alias_span":null,"name":"tt","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6257,"byte_end":6262,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"alias_span":null,"name":"ident","value":"","parent":{"krate":0,"index":498}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":6296,"byte_end":6304,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"alias_span":null,"name":"lifetime","value":"","parent":{"krate":0,"index":498}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":0,"byte_end":6307,"line_start":1,"line_end":211,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":138},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":498}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":515},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6474,"byte_end":6483,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { style, value, is_sugared_doc }","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"decl_id":null,"docs":" Doc-comments are promoted to attributes that have `is_sugared_doc` = true\n","sig":null,"attributes":[{"value":"/ Doc-comments are promoted to attributes that have `is_sugared_doc` = true","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6340,"byte_end":6417,"line_start":5,"line_end":5,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":516},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6494,"byte_end":6499,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6520,"byte_end":6525,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"value","qualname":"::attr::Attribute::value","value":"attr::MetaItem","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6545,"byte_end":6559,"line_start":10,"line_end":10,"column_start":9,"column_end":23},"name":"is_sugared_doc","qualname":"::attr::Attribute::is_sugared_doc","value":"bool","parent":{"krate":0,"index":515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6598,"byte_end":6602,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"name","qualname":"<Attribute>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":534},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6961,"byte_end":6966,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" Attribute of the form `#![...]`.\n","sig":null,"attributes":[{"value":"/ Attribute of the form `#![...]`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6920,"byte_end":6956,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7013,"byte_end":7018,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner","parent":{"krate":0,"index":533},"children":[],"decl_id":null,"docs":" Attribute of the form `#[...]`.\n","sig":null,"attributes":[{"value":"/ Attribute of the form `#[...]`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6973,"byte_end":7008,"line_start":27,"line_end":27,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":533},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6904,"byte_end":6913,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"pub enum AttrStyle {\n\n    /// Attribute of the form `#![...]`.\n    Outer,\n\n    /// Attribute of the form `#[...]`.\n    Inner,\n}","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":536}],"decl_id":null,"docs":" Distinguishes between Attributes that decorate items and Attributes that\n are contained as statements within items. These two cases need to be\n distinguished for pretty-printing.\n","sig":null,"attributes":[{"value":"/ Distinguishes between Attributes that decorate items and Attributes that","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6655,"byte_end":6731,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ are contained as statements within items. These two cases need to be","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6732,"byte_end":6804,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ distinguished for pretty-printing.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6805,"byte_end":6843,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7259,"byte_end":7263,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"Word","qualname":"::attr::MetaItem::Word","value":"MetaItem::Word(Ident)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Word meta item.","sig":null,"attributes":[{"value":"/ Word meta item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7191,"byte_end":7210,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7215,"byte_end":7218,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ E.g. `test` as in `#[test]`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7223,"byte_end":7254,"line_start":38,"line_end":38,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7357,"byte_end":7361,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"List","qualname":"::attr::MetaItem::List","value":"MetaItem::List(Ident, Vec<NestedMetaItem>)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" List meta item.","sig":null,"attributes":[{"value":"/ List meta item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7277,"byte_end":7296,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7301,"byte_end":7304,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ E.g. `derive(..)` as in `#[derive(..)]`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7309,"byte_end":7352,"line_start":43,"line_end":43,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7492,"byte_end":7501,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"NameValue","qualname":"::attr::MetaItem::NameValue","value":"MetaItem::NameValue(Ident, Lit)","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Name-value meta item.","sig":null,"attributes":[{"value":"/ Name-value meta item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7396,"byte_end":7421,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7426,"byte_end":7429,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7434,"byte_end":7487,"line_start":48,"line_end":48,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":552},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7176,"byte_end":7184,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"name":"MetaItem","qualname":"::attr::MetaItem","value":"pub enum MetaItem {\n\n    /// Word meta item.\n    ///\n    /// E.g. `test` as in `#[test]`\n    Word(Ident),\n\n    /// List meta item.\n    ///\n    /// E.g. `derive(..)` as in `#[derive(..)]`\n    List(Ident, Vec<NestedMetaItem>),\n\n    /// Name-value meta item.\n    ///\n    /// E.g. `feature = \"foo\"` as in `#[feature = \"foo\"]`\n    NameValue(Ident, Lit),\n}","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":560}],"decl_id":null,"docs":" A compile-time attribute item.","sig":null,"attributes":[{"value":"/ A compile-time attribute item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7023,"byte_end":7057,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7058,"byte_end":7061,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ E.g. `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7062,"byte_end":7121,"line_start":33,"line_end":33,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7698,"byte_end":7702,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"name","qualname":"<MetaItem>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Name of the item.","sig":null,"attributes":[{"value":"/ Name of the item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7538,"byte_end":7559,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7564,"byte_end":7567,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ E.g. `test` as in `#[test]`, `derive` as in `#[derive(..)]`, and","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7572,"byte_end":7640,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `feature` as in `#[feature = \"foo\"]`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7645,"byte_end":7686,"line_start":56,"line_end":56,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":579},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8206,"byte_end":8214,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"MetaItem","qualname":"::attr::NestedMetaItem::MetaItem","value":"NestedMetaItem::MetaItem(MetaItem)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" A full `MetaItem`.","sig":null,"attributes":[{"value":"/ A full `MetaItem`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8080,"byte_end":8102,"line_start":71,"line_end":71,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8107,"byte_end":8110,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ E.g. `Copy` in `#[derive(Copy)]` would be a `MetaItem::Word(Ident::from(\"Copy\"))`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8115,"byte_end":8201,"line_start":73,"line_end":73,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":582},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8309,"byte_end":8316,"line_start":79,"line_end":79,"column_start":5,"column_end":12},"name":"Literal","qualname":"::attr::NestedMetaItem::Literal","value":"NestedMetaItem::Literal(Lit)","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" A Rust literal.","sig":null,"attributes":[{"value":"/ A Rust literal.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8231,"byte_end":8250,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8255,"byte_end":8258,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ E.g. `\"name\"` in `#[rename(\"name\")]`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8263,"byte_end":8304,"line_start":78,"line_end":78,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":578},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8059,"byte_end":8073,"line_start":70,"line_end":70,"column_start":10,"column_end":24},"name":"NestedMetaItem","qualname":"::attr::NestedMetaItem","value":"pub enum NestedMetaItem {\n\n    /// A full `MetaItem`.\n    ///\n    /// E.g. `Copy` in `#[derive(Copy)]` would be a `MetaItem::Word(Ident::from(\"Copy\"))`.\n    MetaItem(MetaItem),\n\n    /// A Rust literal.\n    ///\n    /// E.g. `\"name\"` in `#[rename(\"name\")]`.\n    Literal(Lit),\n}","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":582}],"decl_id":null,"docs":" Possible values inside of compile-time attribute lists.","sig":null,"attributes":[{"value":"/ Possible values inside of compile-time attribute lists.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7905,"byte_end":7964,"line_start":66,"line_end":66,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7965,"byte_end":7968,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ E.g. the '..' in `#[name(..)]`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7969,"byte_end":8004,"line_start":68,"line_end":68,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8363,"byte_end":8366,"line_start":83,"line_end":83,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15174,"byte_end":15178,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Call","qualname":"::constant::ConstExpr::Call","value":"ConstExpr::Call(Box<ConstExpr>, Vec<ConstExpr>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" A function call","sig":null,"attributes":[{"value":"/ A function call","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15031,"byte_end":15050,"line_start":5,"line_end":5,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15055,"byte_end":15058,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ The first field resolves to the function itself,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15063,"byte_end":15115,"line_start":7,"line_end":7,"column_start":5,"column_end":57}},{"value":"/ and the second field is the list of arguments","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15120,"byte_end":15169,"line_start":8,"line_end":8,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15276,"byte_end":15282,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Binary","qualname":"::constant::ConstExpr::Binary","value":"ConstExpr::Binary(BinOp, Box<ConstExpr>, Box<ConstExpr>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" A binary operation (For example: `a + b`, `a * b`)\n","sig":null,"attributes":[{"value":"/ A binary operation (For example: `a + b`, `a * b`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15217,"byte_end":15271,"line_start":11,"line_end":11,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15380,"byte_end":15385,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Unary","qualname":"::constant::ConstExpr::Unary","value":"ConstExpr::Unary(UnOp, Box<ConstExpr>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" A unary operation (For example: `!x`, `*x`)\n","sig":null,"attributes":[{"value":"/ A unary operation (For example: `!x`, `*x`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15328,"byte_end":15375,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":618},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15460,"byte_end":15463,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Lit","qualname":"::constant::ConstExpr::Lit","value":"ConstExpr::Lit(Lit)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" A literal (For example: `1`, `\"foo\"`)\n","sig":null,"attributes":[{"value":"/ A literal (For example: `1`, `\"foo\"`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15414,"byte_end":15455,"line_start":17,"line_end":17,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15505,"byte_end":15509,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Cast","qualname":"::constant::ConstExpr::Cast","value":"ConstExpr::Cast(Box<ConstExpr>, Box<Ty>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" A cast (`foo as f64`)\n","sig":null,"attributes":[{"value":"/ A cast (`foo as f64`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15475,"byte_end":15500,"line_start":20,"line_end":20,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":625},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15648,"byte_end":15652,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Path","qualname":"::constant::ConstExpr::Path","value":"ConstExpr::Path(Path)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" Variable reference, possibly containing `::` and/or type\n parameters, e.g. foo::bar::<baz>.\n","sig":null,"attributes":[{"value":"/ Variable reference, possibly containing `::` and/or type","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15541,"byte_end":15601,"line_start":23,"line_end":23,"column_start":5,"column_end":65}},{"value":"/ parameters, e.g. foo::bar::<baz>.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15606,"byte_end":15643,"line_start":24,"line_end":24,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15706,"byte_end":15711,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Index","qualname":"::constant::ConstExpr::Index","value":"ConstExpr::Index(Box<ConstExpr>, Box<ConstExpr>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" An indexing operation (`foo[2]`)\n","sig":null,"attributes":[{"value":"/ An indexing operation (`foo[2]`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15665,"byte_end":15701,"line_start":27,"line_end":27,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":632},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15811,"byte_end":15816,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Paren","qualname":"::constant::ConstExpr::Paren","value":"ConstExpr::Paren(Box<ConstExpr>)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" No-op: used solely so we can pretty-print faithfully\n","sig":null,"attributes":[{"value":"/ No-op: used solely so we can pretty-print faithfully","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15750,"byte_end":15806,"line_start":30,"line_end":30,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":635},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15935,"byte_end":15940,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Other","qualname":"::constant::ConstExpr::Other","value":"ConstExpr::Other(Other)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":" If compiling with full support for expression syntax, any expression is\n allowed\n","sig":null,"attributes":[{"value":"/ If compiling with full support for expression syntax, any expression is","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15839,"byte_end":15914,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ allowed","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15919,"byte_end":15930,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":604},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15015,"byte_end":15024,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"ConstExpr","qualname":"::constant::ConstExpr","value":"pub enum ConstExpr {\n\n    /// A function call\n    ///\n    /// The first field resolves to the function itself,\n    /// and the second field is the list of arguments\n    Call(Box<ConstExpr>, Vec<ConstExpr>),\n\n    /// A binary operation (For example: `a + b`, `a * b`)\n    Binary(BinOp, Box<ConstExpr>, Box<ConstExpr>),\n\n    /// A unary operation (For example: `!x`, `*x`)\n    Unary(UnOp, Box<ConstExpr>),\n\n    /// A literal (For example: `1`, `\"foo\"`)\n    Lit(Lit),\n\n    /// A cast (`foo as f64`)\n    Cast(Box<ConstExpr>, Box<Ty>),\n\n    /// Variable reference, possibly containing `::` and/or type\n    /// parameters, e.g. foo::bar::<baz>.\n    Path(Path),\n\n    /// An indexing operation (`foo[2]`)\n    Index(Box<ConstExpr>, Box<ConstExpr>),\n\n    /// No-op: used solely so we can pretty-print faithfully\n    Paren(Box<ConstExpr>),\n\n    /// If compiling with full support for expression syntax, any expression is\n    /// allowed\n    Other(Other),\n}","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":609},{"krate":0,"index":614},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":632},{"krate":0,"index":635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":652},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":16038,"byte_end":16043,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Other","qualname":"::constant::Other","value":"Other {  }","parent":null,"children":[{"krate":0,"index":653}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":15952,"byte_end":15981,"line_start":38,"line_end":38,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20366,"byte_end":20373,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Variant","qualname":"::data::Variant","value":"Variant { ident, attrs, data, discriminant }","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" An enum variant.\n","sig":null,"attributes":[{"value":"/ An enum variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20289,"byte_end":20309,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":678},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20413,"byte_end":20418,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"ident","qualname":"::data::Variant::ident","value":"ident::Ident","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[{"value":"/ Name of the variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20380,"byte_end":20404,"line_start":6,"line_end":6,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":679},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20478,"byte_end":20483,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20432,"byte_end":20469,"line_start":9,"line_end":9,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":680},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20535,"byte_end":20539,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"data","qualname":"::data::Variant::data","value":"data::VariantData","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Type of variant.\n","sig":null,"attributes":[{"value":"/ Type of variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20506,"byte_end":20526,"line_start":12,"line_end":12,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":681},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20609,"byte_end":20621,"line_start":16,"line_end":16,"column_start":9,"column_end":21},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<constant::ConstExpr>","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Explicit discriminant, e.g. `Foo = 1`\n","sig":null,"attributes":[{"value":"/ Explicit discriminant, e.g. `Foo = 1`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20559,"byte_end":20600,"line_start":15,"line_end":15,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20824,"byte_end":20830,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Struct","qualname":"::data::VariantData::Struct","value":"VariantData::Struct(Vec<Field>)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Struct variant, e.g. `Point { x: f64, y: f64 }`.\n","sig":null,"attributes":[{"value":"/ Struct variant, e.g. `Point { x: f64, y: f64 }`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20767,"byte_end":20819,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20888,"byte_end":20893,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Tuple","qualname":"::data::VariantData::Tuple","value":"VariantData::Tuple(Vec<Field>)","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Tuple variant, e.g. `Some(T)`.\n","sig":null,"attributes":[{"value":"/ Tuple variant, e.g. `Some(T)`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20849,"byte_end":20883,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":703},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20947,"byte_end":20951,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Unit","qualname":"::data::VariantData::Unit","value":"VariantData::Unit","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":" Unit variant, e.g. `None`.\n","sig":null,"attributes":[{"value":"/ Unit variant, e.g. `None`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20912,"byte_end":20942,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":696},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20749,"byte_end":20760,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"VariantData","qualname":"::data::VariantData","value":"pub enum VariantData {\n\n    /// Struct variant, e.g. `Point { x: f64, y: f64 }`.\n    Struct(Vec<Field>),\n\n    /// Tuple variant, e.g. `Some(T)`.\n    Tuple(Vec<Field>),\n\n    /// Unit variant, e.g. `None`.\n    Unit,\n}","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703}],"decl_id":null,"docs":" Data stored within an enum variant or struct.\n","sig":null,"attributes":[{"value":"/ Data stored within an enum variant or struct.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20645,"byte_end":20694,"line_start":19,"line_end":19,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21045,"byte_end":21051,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"fields","qualname":"<VariantData>::fields","value":"pub fn fields(&Self) -> &[Field]","parent":null,"children":[],"decl_id":null,"docs":" Slice containing the fields stored in the variant.\n","sig":null,"attributes":[{"value":"/ Slice containing the fields stored in the variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20979,"byte_end":21033,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21328,"byte_end":21338,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"fields_mut","qualname":"<VariantData>::fields_mut","value":"pub fn fields_mut(&mut Self) -> &mut [Field]","parent":null,"children":[],"decl_id":null,"docs":" Mutable slice containing the fields stored in the variant.\n","sig":null,"attributes":[{"value":"/ Mutable slice containing the fields stored in the variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21254,"byte_end":21316,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21656,"byte_end":21661,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"Field","qualname":"::data::Field","value":"Field { ident, vis, attrs, ty }","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"decl_id":null,"docs":" A field of a struct or enum variant.\n","sig":null,"attributes":[{"value":"/ A field of a struct or enum variant.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21559,"byte_end":21599,"line_start":52,"line_end":52,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":720},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21762,"byte_end":21767,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<ident::Ident>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Name of the field, if any.","sig":null,"attributes":[{"value":"/ Name of the field, if any.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21668,"byte_end":21698,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21703,"byte_end":21706,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Fields of tuple structs have no names.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21711,"byte_end":21753,"line_start":57,"line_end":57,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":721},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21826,"byte_end":21829,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[{"value":"/ Visibility of the field.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21789,"byte_end":21817,"line_start":60,"line_end":60,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":722},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21892,"byte_end":21897,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21848,"byte_end":21883,"line_start":63,"line_end":63,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":723},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21951,"byte_end":21953,"line_start":67,"line_end":67,"column_start":9,"column_end":11},"name":"ty","qualname":"::data::Field::ty","value":"ty::Ty","parent":{"krate":0,"index":719},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21920,"byte_end":21942,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":739},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22095,"byte_end":22101,"line_start":75,"line_end":75,"column_start":5,"column_end":11},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Public, i.e. `pub`.\n","sig":null,"attributes":[{"value":"/ Public, i.e. `pub`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22067,"byte_end":22090,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":741},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22150,"byte_end":22155,"line_start":78,"line_end":78,"column_start":5,"column_end":10},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Crate-visible, i.e. `pub(crate)`.\n","sig":null,"attributes":[{"value":"/ Crate-visible, i.e. `pub(crate)`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22108,"byte_end":22145,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":743},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22208,"byte_end":22218,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(Box<Path>)","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Restricted, e.g. `pub(some::module)`.\n","sig":null,"attributes":[{"value":"/ Restricted, e.g. `pub(some::module)`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22162,"byte_end":22203,"line_start":80,"line_end":80,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22269,"byte_end":22278,"line_start":84,"line_end":84,"column_start":5,"column_end":14},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":738},"children":[],"decl_id":null,"docs":" Inherited, i.e. private.\n","sig":null,"attributes":[{"value":"/ Inherited, i.e. private.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22236,"byte_end":22264,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":738},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":22050,"byte_end":22060,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"Visibility","qualname":"::data::Visibility","value":"pub enum Visibility {\n\n    /// Public, i.e. `pub`.\n    Public,\n\n    /// Crate-visible, i.e. `pub(crate)`.\n    Crate,\n\n    /// Restricted, e.g. `pub(some::module)`.\n    Restricted(Box<Path>),\n\n    /// Inherited, i.e. private.\n    Inherited,\n}","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":746}],"decl_id":null,"docs":" Visibility level of an item.\n","sig":null,"attributes":[{"value":"/ Visibility level of an item.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":21963,"byte_end":21995,"line_start":71,"line_end":71,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":37976,"byte_end":37984,"line_start":6,"line_end":6,"column_start":12,"column_end":20},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lifetimes, ty_params, where_clause }","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776}],"decl_id":null,"docs":" Represents lifetimes and type parameters attached to a declaration\n of a function, enum, trait, etc.\n","sig":null,"attributes":[{"value":"/ Represents lifetimes and type parameters attached to a declaration","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":37803,"byte_end":37873,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ of a function, enum, trait, etc.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":37874,"byte_end":37910,"line_start":4,"line_end":4,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":774},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":37995,"byte_end":38004,"line_start":7,"line_end":7,"column_start":9,"column_end":18},"name":"lifetimes","qualname":"::generics::Generics::lifetimes","value":"std::vec::Vec<generics::LifetimeDef>","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":775},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38032,"byte_end":38041,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"name":"ty_params","qualname":"::generics::Generics::ty_params","value":"std::vec::Vec<generics::TyParam>","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":776},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38065,"byte_end":38077,"line_start":9,"line_end":9,"column_start":9,"column_end":21},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"generics::WhereClause","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38196,"byte_end":38208,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"ImplGenerics","qualname":"::generics::ImplGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38095,"byte_end":38123,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38124,"byte_end":38167,"line_start":13,"line_end":13,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38330,"byte_end":38340,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"TyGenerics","qualname":"::generics::TyGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38229,"byte_end":38257,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38258,"byte_end":38301,"line_start":18,"line_end":18,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38462,"byte_end":38471,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Turbofish","qualname":"::generics::Turbofish","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `TyGenerics::as_turbofish`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38361,"byte_end":38389,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ Returned by `TyGenerics::as_turbofish`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38390,"byte_end":38433,"line_start":23,"line_end":23,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39143,"byte_end":39157,"line_start":48,"line_end":48,"column_start":12,"column_end":26},"name":"split_for_impl","qualname":"<Generics>::split_for_impl","value":"pub fn split_for_impl(&Self) -> (ImplGenerics, TyGenerics, &WhereClause)","parent":null,"children":[],"decl_id":null,"docs":" Split a type's generics into the pieces required for impl'ing a trait\n for that type.","sig":null,"attributes":[{"value":"/ Split a type's generics into the pieces required for impl'ing a trait","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38541,"byte_end":38614,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ for that type.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38619,"byte_end":38637,"line_start":30,"line_end":30,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38642,"byte_end":38645,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38650,"byte_end":38657,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # extern crate syn;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38662,"byte_end":38685,"line_start":33,"line_end":33,"column_start":5,"column_end":28}},{"value":"/ # #[macro_use]","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38690,"byte_end":38708,"line_start":34,"line_end":34,"column_start":5,"column_end":23}},{"value":"/ # extern crate quote;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38713,"byte_end":38738,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38743,"byte_end":38760,"line_start":36,"line_end":36,"column_start":5,"column_end":22}},{"value":"/ # let generics: syn::Generics = Default::default();","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38765,"byte_end":38820,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ # let name = syn::Ident::new(\"MyType\");","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38825,"byte_end":38868,"line_start":38,"line_end":38,"column_start":5,"column_end":48}},{"value":"/ let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38873,"byte_end":38952,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ quote! {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38957,"byte_end":38969,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/     impl #impl_generics MyTrait for #name #ty_generics #where_clause {","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38974,"byte_end":39048,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/         // ...","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39053,"byte_end":39071,"line_start":42,"line_end":42,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39076,"byte_end":39085,"line_start":43,"line_end":43,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39090,"byte_end":39095,"line_start":44,"line_end":44,"column_start":5,"column_end":10}},{"value":"/ # ;","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39100,"byte_end":39107,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39112,"byte_end":39119,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39124,"byte_end":39131,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39432,"byte_end":39444,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"as_turbofish","qualname":"<TyGenerics>::as_turbofish","value":"pub fn as_turbofish(&Self) -> Turbofish","parent":null,"children":[],"decl_id":null,"docs":" Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.\n","sig":null,"attributes":[{"value":"/ Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39346,"byte_end":39420,"line_start":55,"line_end":55,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39575,"byte_end":39583,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::generics::Lifetime","value":"Lifetime { ident }","parent":null,"children":[{"krate":0,"index":815}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":815},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39594,"byte_end":39599,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"ident","qualname":"::generics::Lifetime::ident","value":"ident::Ident","parent":{"krate":0,"index":814},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39638,"byte_end":39641,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"pub fn new<T: Into<Ident>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":838},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40043,"byte_end":40054,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, bounds }","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" A lifetime definition, e.g. `'a: 'b+'c+'d`\n","sig":null,"attributes":[{"value":"/ A lifetime definition, e.g. `'a: 'b+'c+'d`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39940,"byte_end":39986,"line_start":78,"line_end":78,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40065,"byte_end":40070,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40096,"byte_end":40104,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"generics::Lifetime","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40124,"byte_end":40130,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"std::vec::Vec<generics::Lifetime>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40180,"byte_end":40183,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"pub fn new<T: Into<Ident>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":856},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40470,"byte_end":40477,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"TyParam","qualname":"::generics::TyParam","value":"TyParam { attrs, ident, bounds, default }","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":" A generic type parameter, e.g. `T: Into<String>`.\n","sig":null,"attributes":[{"value":"/ A generic type parameter, e.g. `T: Into<String>`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40360,"byte_end":40413,"line_start":96,"line_end":96,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":857},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40488,"byte_end":40493,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"attrs","qualname":"::generics::TyParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":858},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40519,"byte_end":40524,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"name":"ident","qualname":"::generics::TyParam::ident","value":"ident::Ident","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":859},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40541,"byte_end":40547,"line_start":101,"line_end":101,"column_start":9,"column_end":15},"name":"bounds","qualname":"::generics::TyParam::bounds","value":"std::vec::Vec<generics::TyParamBound>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":860},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40576,"byte_end":40583,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"name":"default","qualname":"::generics::TyParam::default","value":"std::option::Option<ty::Ty>","parent":{"krate":0,"index":856},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41098,"byte_end":41103,"line_start":122,"line_end":122,"column_start":5,"column_end":10},"name":"Trait","qualname":"::generics::TyParamBound::Trait","value":"TyParamBound::Trait(PolyTraitRef, TraitBoundModifier)","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41143,"byte_end":41149,"line_start":123,"line_end":123,"column_start":5,"column_end":11},"name":"Region","qualname":"::generics::TyParamBound::Region","value":"TyParamBound::Region(Lifetime)","parent":{"krate":0,"index":875},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":875},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41079,"byte_end":41091,"line_start":121,"line_end":121,"column_start":10,"column_end":22},"name":"TyParamBound","qualname":"::generics::TyParamBound","value":"pub enum TyParamBound {\n    Trait(PolyTraitRef, TraitBoundModifier),\n    Region(Lifetime),\n}","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":880}],"decl_id":null,"docs":" The AST represents all type param bounds as types.\n `typeck::collect::compute_bounds` matches these against\n the \"special\" built-in traits (see `middle::lang_items`) and\n detects Copy, Send and Sync.\n","sig":null,"attributes":[{"value":"/ The AST represents all type param bounds as types.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40812,"byte_end":40866,"line_start":116,"line_end":116,"column_start":1,"column_end":55}},{"value":"/ `typeck::collect::compute_bounds` matches these against","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40867,"byte_end":40926,"line_start":117,"line_end":117,"column_start":1,"column_end":60}},{"value":"/ the \"special\" built-in traits (see `middle::lang_items`) and","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40927,"byte_end":40991,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/ detects Copy, Send and Sync.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40992,"byte_end":41024,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":898},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41398,"byte_end":41402,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":900},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41408,"byte_end":41413,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe","parent":{"krate":0,"index":897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":897},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41373,"byte_end":41391,"line_start":129,"line_end":129,"column_start":10,"column_end":28},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"pub enum TraitBoundModifier { None, Maybe, }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":900}],"decl_id":null,"docs":" A modifier on a bound, currently this is only used for `?Sized`, where the\n modifier is `Maybe`. Negative bounds should also be handled here.\n","sig":null,"attributes":[{"value":"/ A modifier on a bound, currently this is only used for `?Sized`, where the","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41164,"byte_end":41242,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ modifier is `Maybe`. Negative bounds should also be handled here.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41243,"byte_end":41312,"line_start":127,"line_end":127,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41520,"byte_end":41531,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { predicates }","parent":null,"children":[{"krate":0,"index":917}],"decl_id":null,"docs":" A `where` clause in a definition\n","sig":null,"attributes":[{"value":"/ A `where` clause in a definition","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41418,"byte_end":41454,"line_start":134,"line_end":134,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":917},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41542,"byte_end":41552,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"std::vec::Vec<generics::WherePredicate>","parent":{"krate":0,"index":916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41608,"byte_end":41612,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"none","qualname":"<WhereClause>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41857,"byte_end":41871,"line_start":150,"line_end":150,"column_start":5,"column_end":19},"name":"BoundPredicate","qualname":"::generics::WherePredicate::BoundPredicate","value":"WherePredicate::BoundPredicate(WhereBoundPredicate)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" A type binding, e.g. `for<'c> Foo: Send+Clone+'c`\n","sig":null,"attributes":[{"value":"/ A type binding, e.g. `for<'c> Foo: Send+Clone+'c`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41799,"byte_end":41852,"line_start":149,"line_end":149,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41945,"byte_end":41960,"line_start":152,"line_end":152,"column_start":5,"column_end":20},"name":"RegionPredicate","qualname":"::generics::WherePredicate::RegionPredicate","value":"WherePredicate::RegionPredicate(WhereRegionPredicate)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" A lifetime predicate, e.g. `'a: 'b+'c`\n","sig":null,"attributes":[{"value":"/ A lifetime predicate, e.g. `'a: 'b+'c`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41898,"byte_end":41940,"line_start":151,"line_end":151,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":941},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42032,"byte_end":42043,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"EqPredicate","qualname":"::generics::WherePredicate::EqPredicate","value":"WherePredicate::EqPredicate(WhereEqPredicate)","parent":{"krate":0,"index":934},"children":[],"decl_id":null,"docs":" An equality predicate (unsupported)\n","sig":null,"attributes":[{"value":"/ An equality predicate (unsupported)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41988,"byte_end":42027,"line_start":153,"line_end":153,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":934},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41778,"byte_end":41792,"line_start":148,"line_end":148,"column_start":10,"column_end":24},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"pub enum WherePredicate {\n\n    /// A type binding, e.g. `for<'c> Foo: Send+Clone+'c`\n    BoundPredicate(WhereBoundPredicate),\n\n    /// A lifetime predicate, e.g. `'a: 'b+'c`\n    RegionPredicate(WhereRegionPredicate),\n\n    /// An equality predicate (unsupported)\n    EqPredicate(WhereEqPredicate),\n}","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941}],"decl_id":null,"docs":" A single predicate in a `where` clause\n","sig":null,"attributes":[{"value":"/ A single predicate in a `where` clause","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41681,"byte_end":41723,"line_start":146,"line_end":146,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":958},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42182,"byte_end":42201,"line_start":161,"line_end":161,"column_start":12,"column_end":31},"name":"WhereBoundPredicate","qualname":"::generics::WhereBoundPredicate","value":"WhereBoundPredicate { bound_lifetimes, bounded_ty, bounds }","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"decl_id":null,"docs":" A type bound.","sig":null,"attributes":[{"value":"/ A type bound.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42066,"byte_end":42083,"line_start":157,"line_end":157,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42084,"byte_end":42087,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ E.g. `for<'c> Foo: Send+Clone+'c`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42088,"byte_end":42125,"line_start":159,"line_end":159,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":959},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42255,"byte_end":42270,"line_start":163,"line_end":163,"column_start":9,"column_end":24},"name":"bound_lifetimes","qualname":"::generics::WhereBoundPredicate::bound_lifetimes","value":"std::vec::Vec<generics::LifetimeDef>","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[{"value":"/ Any lifetimes from a `for` binding","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42208,"byte_end":42246,"line_start":162,"line_end":162,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":960},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42329,"byte_end":42339,"line_start":165,"line_end":165,"column_start":9,"column_end":19},"name":"bounded_ty","qualname":"::generics::WhereBoundPredicate::bounded_ty","value":"ty::Ty","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[{"value":"/ The type being bounded","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42294,"byte_end":42320,"line_start":164,"line_end":164,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":961},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42410,"byte_end":42416,"line_start":167,"line_end":167,"column_start":9,"column_end":15},"name":"bounds","qualname":"::generics::WhereBoundPredicate::bounds","value":"std::vec::Vec<generics::TyParamBound>","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[{"value":"/ Trait and lifetime bounds (`Clone+Send+'static`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42349,"byte_end":42401,"line_start":166,"line_end":166,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42547,"byte_end":42567,"line_start":174,"line_end":174,"column_start":12,"column_end":32},"name":"WhereRegionPredicate","qualname":"::generics::WhereRegionPredicate","value":"WhereRegionPredicate { lifetime, bounds }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978}],"decl_id":null,"docs":" A lifetime predicate.","sig":null,"attributes":[{"value":"/ A lifetime predicate.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42440,"byte_end":42465,"line_start":170,"line_end":170,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42466,"byte_end":42469,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ E.g. `'a: 'b+'c`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42470,"byte_end":42490,"line_start":172,"line_end":172,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42578,"byte_end":42586,"line_start":175,"line_end":175,"column_start":9,"column_end":17},"name":"lifetime","qualname":"::generics::WhereRegionPredicate::lifetime","value":"generics::Lifetime","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42606,"byte_end":42612,"line_start":176,"line_end":176,"column_start":9,"column_end":15},"name":"bounds","qualname":"::generics::WhereRegionPredicate::bounds","value":"std::vec::Vec<generics::Lifetime>","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":993},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42750,"byte_end":42766,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"WhereEqPredicate","qualname":"::generics::WhereEqPredicate","value":"WhereEqPredicate { lhs_ty, rhs_ty }","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995}],"decl_id":null,"docs":" An equality predicate (unsupported).","sig":null,"attributes":[{"value":"/ An equality predicate (unsupported).","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42632,"byte_end":42672,"line_start":179,"line_end":179,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42673,"byte_end":42676,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ E.g. `T=int`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42677,"byte_end":42693,"line_start":181,"line_end":181,"column_start":1,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":994},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42777,"byte_end":42783,"line_start":184,"line_end":184,"column_start":9,"column_end":15},"name":"lhs_ty","qualname":"::generics::WhereEqPredicate::lhs_ty","value":"ty::Ty","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":995},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":42797,"byte_end":42803,"line_start":185,"line_end":185,"column_start":9,"column_end":15},"name":"rhs_ty","qualname":"::generics::WhereEqPredicate::rhs_ty","value":"ty::Ty","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1013},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":43825,"byte_end":43833,"line_start":218,"line_end":218,"column_start":16,"column_end":24},"name":"lifetime","qualname":"::generics::parsing::lifetime","value":"pub fn lifetime(&str) -> ::synom::IResult<&str, Lifetime>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1025},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53547,"byte_end":53552,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53587,"byte_end":53590,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"new","qualname":"<Ident>::new","value":"pub fn new<T: Into<Ident>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54601,"byte_end":54606,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"ident","qualname":"::ident::parsing::ident","value":"pub fn ident(&str) -> IResult<&str, Ident>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1047},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57038,"byte_end":57041,"line_start":7,"line_end":7,"column_start":5,"column_end":8},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(String, StrStyle)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A string literal (`\"foo\"`)\n","sig":null,"attributes":[{"value":"/ A string literal (`\"foo\"`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57003,"byte_end":57033,"line_start":6,"line_end":6,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1051},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57098,"byte_end":57105,"line_start":9,"line_end":9,"column_start":5,"column_end":12},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(Vec<u8>, StrStyle)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A byte string (`b\"foo\"`)\n","sig":null,"attributes":[{"value":"/ A byte string (`b\"foo\"`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57065,"byte_end":57093,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1055},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57159,"byte_end":57163,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(u8)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A byte char (`b'f'`)\n","sig":null,"attributes":[{"value":"/ A byte char (`b'f'`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57130,"byte_end":57154,"line_start":10,"line_end":10,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57209,"byte_end":57213,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(char)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A character literal (`'a'`)\n","sig":null,"attributes":[{"value":"/ A character literal (`'a'`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57173,"byte_end":57204,"line_start":12,"line_end":12,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57258,"byte_end":57261,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(u64, IntTy)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" An integer literal (`1`)\n","sig":null,"attributes":[{"value":"/ An integer literal (`1`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57225,"byte_end":57253,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57337,"byte_end":57342,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(String, FloatTy)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A float literal (`1f64` or `1E10f64` or `1.0E10`)\n","sig":null,"attributes":[{"value":"/ A float literal (`1f64` or `1E10f64` or `1.0E10`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57279,"byte_end":57332,"line_start":16,"line_end":16,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1069},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57391,"byte_end":57395,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(bool)","parent":{"krate":0,"index":1046},"children":[],"decl_id":null,"docs":" A boolean literal\n","sig":null,"attributes":[{"value":"/ A boolean literal","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57365,"byte_end":57386,"line_start":18,"line_end":18,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1046},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":56993,"byte_end":56996,"line_start":5,"line_end":5,"column_start":10,"column_end":13},"name":"Lit","qualname":"::lit::Lit","value":"pub enum Lit {\n\n    /// A string literal (`\"foo\"`)\n    Str(String, StrStyle),\n\n    /// A byte string (`b\"foo\"`)\n    ByteStr(Vec<u8>, StrStyle),\n\n    /// A byte char (`b'f'`)\n    Byte(u8),\n\n    /// A character literal (`'a'`)\n    Char(char),\n\n    /// An integer literal (`1`)\n    Int(u64, IntTy),\n\n    /// A float literal (`1f64` or `1E10f64` or `1.0E10`)\n    Float(String, FloatTy),\n\n    /// A boolean literal\n    Bool(bool),\n}","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1051},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1065},{"krate":0,"index":1069}],"decl_id":null,"docs":" Literal kind.","sig":null,"attributes":[{"value":"/ Literal kind.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":56875,"byte_end":56892,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":56893,"byte_end":56896,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ E.g. `\"foo\"`, `42`, `12.34` or `bool`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":56897,"byte_end":56938,"line_start":3,"line_end":3,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1087},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57520,"byte_end":57526,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" A regular string, like `\"foo\"`\n","sig":null,"attributes":[{"value":"/ A regular string, like `\"foo\"`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57481,"byte_end":57515,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1089},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57631,"byte_end":57634,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":1086},"children":[],"decl_id":null,"docs":" A raw string, like `r##\"foo\"##`","sig":null,"attributes":[{"value":"/ A raw string, like `r##\"foo\"##`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57532,"byte_end":57567,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57572,"byte_end":57575,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The uint is the number of `#` symbols used","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57580,"byte_end":57626,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":1086},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57466,"byte_end":57474,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"StrStyle","qualname":"::lit::StrStyle","value":"pub enum StrStyle {\n\n    /// A regular string, like `\"foo\"`\n    Cooked,\n\n    /// A raw string, like `r##\"foo\"##`\n    ///\n    /// The uint is the number of `#` symbols used\n    Raw(usize),\n}","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1089}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1108},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58398,"byte_end":58403,"line_start":70,"line_end":70,"column_start":5,"column_end":10},"name":"Isize","qualname":"::lit::IntTy::Isize","value":"IntTy::Isize","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58409,"byte_end":58411,"line_start":71,"line_end":71,"column_start":5,"column_end":7},"name":"I8","qualname":"::lit::IntTy::I8","value":"IntTy::I8","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58417,"byte_end":58420,"line_start":72,"line_end":72,"column_start":5,"column_end":8},"name":"I16","qualname":"::lit::IntTy::I16","value":"IntTy::I16","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58426,"byte_end":58429,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"I32","qualname":"::lit::IntTy::I32","value":"IntTy::I32","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1116},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58435,"byte_end":58438,"line_start":74,"line_end":74,"column_start":5,"column_end":8},"name":"I64","qualname":"::lit::IntTy::I64","value":"IntTy::I64","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58444,"byte_end":58449,"line_start":75,"line_end":75,"column_start":5,"column_end":10},"name":"Usize","qualname":"::lit::IntTy::Usize","value":"IntTy::Usize","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58455,"byte_end":58457,"line_start":76,"line_end":76,"column_start":5,"column_end":7},"name":"U8","qualname":"::lit::IntTy::U8","value":"IntTy::U8","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58463,"byte_end":58466,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"U16","qualname":"::lit::IntTy::U16","value":"IntTy::U16","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1124},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58472,"byte_end":58475,"line_start":78,"line_end":78,"column_start":5,"column_end":8},"name":"U32","qualname":"::lit::IntTy::U32","value":"IntTy::U32","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58481,"byte_end":58484,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"U64","qualname":"::lit::IntTy::U64","value":"IntTy::U64","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1128},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58490,"byte_end":58500,"line_start":80,"line_end":80,"column_start":5,"column_end":15},"name":"Unsuffixed","qualname":"::lit::IntTy::Unsuffixed","value":"IntTy::Unsuffixed","parent":{"krate":0,"index":1107},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1107},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58386,"byte_end":58391,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"IntTy","qualname":"::lit::IntTy","value":"pub enum IntTy {\n    Isize,\n    I8,\n    I16,\n    I32,\n    I64,\n    Usize,\n    U8,\n    U16,\n    U32,\n    U64,\n    Unsuffixed,\n}","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1145},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58579,"byte_end":58582,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"F32","qualname":"::lit::FloatTy::F32","value":"FloatTy::F32","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1147},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58588,"byte_end":58591,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"F64","qualname":"::lit::FloatTy::F64","value":"FloatTy::F64","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1149},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58597,"byte_end":58607,"line_start":87,"line_end":87,"column_start":5,"column_end":15},"name":"Unsuffixed","qualname":"::lit::FloatTy::Unsuffixed","value":"FloatTy::Unsuffixed","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1144},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58565,"byte_end":58572,"line_start":84,"line_end":84,"column_start":10,"column_end":17},"name":"FloatTy","qualname":"::lit::FloatTy","value":"pub enum FloatTy { F32, F64, Unsuffixed, }","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1147},{"krate":0,"index":1149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59601,"byte_end":59607,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"StrLit","qualname":"::lit::StrLit","value":"StrLit { value, style }","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59538,"byte_end":59565,"line_start":129,"line_end":129,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59618,"byte_end":59623,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"name":"value","qualname":"::lit::StrLit::value","value":"std::string::String","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59641,"byte_end":59646,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"style","qualname":"::lit::StrLit::style","value":"lit::StrStyle","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59724,"byte_end":59734,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"ByteStrLit","qualname":"::lit::ByteStrLit","value":"ByteStrLit { value, style }","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59661,"byte_end":59688,"line_start":136,"line_end":136,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1197},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59745,"byte_end":59750,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"name":"value","qualname":"::lit::ByteStrLit::value","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1198},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59769,"byte_end":59774,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"name":"style","qualname":"::lit::ByteStrLit::style","value":"lit::StrStyle","parent":{"krate":0,"index":1196},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1203},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59852,"byte_end":59858,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"IntLit","qualname":"::lit::IntLit","value":"IntLit { value, suffix }","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59789,"byte_end":59816,"line_start":143,"line_end":143,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59869,"byte_end":59874,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"value","qualname":"::lit::IntLit::value","value":"u64","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59889,"byte_end":59895,"line_start":147,"line_end":147,"column_start":9,"column_end":15},"name":"suffix","qualname":"::lit::IntLit::suffix","value":"lit::IntTy","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59970,"byte_end":59978,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"FloatLit","qualname":"::lit::FloatLit","value":"FloatLit { value, suffix }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59907,"byte_end":59934,"line_start":150,"line_end":150,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":59989,"byte_end":59994,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"name":"value","qualname":"::lit::FloatLit::value","value":"std::string::String","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":60012,"byte_end":60018,"line_start":154,"line_end":154,"column_start":9,"column_end":15},"name":"suffix","qualname":"::lit::FloatLit::suffix","value":"lit::FloatTy","parent":{"krate":0,"index":1210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1217},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":60299,"byte_end":60302,"line_start":165,"line_end":165,"column_start":16,"column_end":19},"name":"lit","qualname":"::lit::parsing::lit","value":"pub fn lit(&str) -> ::synom::IResult<&str, Lit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1225},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":60853,"byte_end":60859,"line_start":181,"line_end":181,"column_start":16,"column_end":22},"name":"string","qualname":"::lit::parsing::string","value":"pub fn string(&str) -> ::synom::IResult<&str, StrLit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1229},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":61251,"byte_end":61262,"line_start":196,"line_end":196,"column_start":16,"column_end":27},"name":"byte_string","qualname":"::lit::parsing::byte_string","value":"pub fn byte_string(&str) -> ::synom::IResult<&str, ByteStrLit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1232},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":61663,"byte_end":61667,"line_start":209,"line_end":209,"column_start":16,"column_end":20},"name":"byte","qualname":"::lit::parsing::byte","value":"pub fn byte(&str) -> ::synom::IResult<&str, u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1233},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":61813,"byte_end":61822,"line_start":217,"line_end":217,"column_start":16,"column_end":25},"name":"character","qualname":"::lit::parsing::character","value":"pub fn character(&str) -> ::synom::IResult<&str, char>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1234},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":61951,"byte_end":61956,"line_start":224,"line_end":224,"column_start":16,"column_end":21},"name":"float","qualname":"::lit::parsing::float","value":"pub fn float(&str) -> ::synom::IResult<&str, FloatLit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1238},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":62301,"byte_end":62304,"line_start":236,"line_end":236,"column_start":16,"column_end":19},"name":"int","qualname":"::lit::parsing::int","value":"pub fn int(&str) -> ::synom::IResult<&str, IntLit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1250},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":63117,"byte_end":63124,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"boolean","qualname":"::lit::parsing::boolean","value":"pub fn boolean(&str) -> ::synom::IResult<&str, bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71089,"byte_end":71092,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Mac","qualname":"::mac::Mac","value":"Mac { path, tts }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"decl_id":null,"docs":" Represents a macro invocation. The Path indicates which macro\n is being invoked, and the vector of token-trees contains the source\n of the macro invocation.","sig":null,"attributes":[{"value":"/ Represents a macro invocation. The Path indicates which macro","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70750,"byte_end":70815,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ is being invoked, and the vector of token-trees contains the source","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70816,"byte_end":70887,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ of the macro invocation.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70888,"byte_end":70916,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70917,"byte_end":70920,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ NB: the additional ident for a `macro_rules`-style macro is actually","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70921,"byte_end":70993,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ stored in the enclosing item. Oog.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":70994,"byte_end":71032,"line_start":8,"line_end":8,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1254},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71103,"byte_end":71107,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"path","qualname":"::mac::Mac::path","value":"ty::Path","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1255},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71123,"byte_end":71126,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"tts","qualname":"::mac::Mac::tts","value":"std::vec::Vec<mac::TokenTree>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1271},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71953,"byte_end":71958,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Token","qualname":"::mac::TokenTree::Token","value":"TokenTree::Token(Token)","parent":{"krate":0,"index":1270},"children":[],"decl_id":null,"docs":" A single token\n","sig":null,"attributes":[{"value":"/ A single token","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71930,"byte_end":71948,"line_start":29,"line_end":29,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72015,"byte_end":72024,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"Delimited","qualname":"::mac::TokenTree::Delimited","value":"TokenTree::Delimited(Delimited)","parent":{"krate":0,"index":1270},"children":[],"decl_id":null,"docs":" A delimited sequence of token trees\n","sig":null,"attributes":[{"value":"/ A delimited sequence of token trees","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71971,"byte_end":72010,"line_start":31,"line_end":31,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":1270},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71914,"byte_end":71923,"line_start":28,"line_end":28,"column_start":10,"column_end":19},"name":"TokenTree","qualname":"::mac::TokenTree","value":"pub enum TokenTree {\n\n    /// A single token\n    Token(Token),\n\n    /// A delimited sequence of token trees\n    Delimited(Delimited),\n}","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1274}],"decl_id":null,"docs":" When the main rust parser encounters a syntax-extension invocation, it\n parses the arguments to the invocation as a token-tree. This is a very\n loose structure, such that all sorts of different AST-fragments can\n be passed to syntax extensions using a uniform type.","sig":null,"attributes":[{"value":"/ When the main rust parser encounters a syntax-extension invocation, it","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71147,"byte_end":71221,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ parses the arguments to the invocation as a token-tree. This is a very","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71222,"byte_end":71296,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ loose structure, such that all sorts of different AST-fragments can","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71297,"byte_end":71368,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ be passed to syntax extensions using a uniform type.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71369,"byte_end":71425,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71426,"byte_end":71429,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the syntax extension is an MBE macro, it will attempt to match its","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71430,"byte_end":71503,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ LHS token tree against the provided token tree, and if it finds a","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71504,"byte_end":71573,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ match, will transcribe the RHS token tree, splicing in any captured","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71574,"byte_end":71645,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ `macro_parser::matched_nonterminals` into the `SubstNt`s it finds.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71646,"byte_end":71716,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71717,"byte_end":71720,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The RHS of an MBE macro is the only place `SubstNt`s are substituted.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71721,"byte_end":71794,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ Nothing special happens to misnamed or misplaced `SubstNt`s.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":71795,"byte_end":71859,"line_start":26,"line_end":26,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72096,"byte_end":72105,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"Delimited","qualname":"::mac::Delimited","value":"Delimited { delim, tts }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1292},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72146,"byte_end":72151,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"delim","qualname":"::mac::Delimited::delim","value":"mac::DelimToken","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The type of delimiter\n","sig":null,"attributes":[{"value":"/ The type of delimiter","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72112,"byte_end":72137,"line_start":37,"line_end":37,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1293},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72219,"byte_end":72222,"line_start":40,"line_end":40,"column_start":9,"column_end":12},"name":"tts","qualname":"::mac::Delimited::tts","value":"std::vec::Vec<mac::TokenTree>","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The delimited sequence of token trees\n","sig":null,"attributes":[{"value":"/ The delimited sequence of token trees","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72169,"byte_end":72210,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1309},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72345,"byte_end":72347,"line_start":46,"line_end":46,"column_start":5,"column_end":7},"name":"Eq","qualname":"::mac::Token::Eq","value":"Token::Eq","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72353,"byte_end":72355,"line_start":47,"line_end":47,"column_start":5,"column_end":7},"name":"Lt","qualname":"::mac::Token::Lt","value":"Token::Lt","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72361,"byte_end":72363,"line_start":48,"line_end":48,"column_start":5,"column_end":7},"name":"Le","qualname":"::mac::Token::Le","value":"Token::Le","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1315},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72369,"byte_end":72373,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"EqEq","qualname":"::mac::Token::EqEq","value":"Token::EqEq","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72379,"byte_end":72381,"line_start":50,"line_end":50,"column_start":5,"column_end":7},"name":"Ne","qualname":"::mac::Token::Ne","value":"Token::Ne","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72387,"byte_end":72389,"line_start":51,"line_end":51,"column_start":5,"column_end":7},"name":"Ge","qualname":"::mac::Token::Ge","value":"Token::Ge","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72395,"byte_end":72397,"line_start":52,"line_end":52,"column_start":5,"column_end":7},"name":"Gt","qualname":"::mac::Token::Gt","value":"Token::Gt","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1323},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72403,"byte_end":72409,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"AndAnd","qualname":"::mac::Token::AndAnd","value":"Token::AndAnd","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72415,"byte_end":72419,"line_start":54,"line_end":54,"column_start":5,"column_end":9},"name":"OrOr","qualname":"::mac::Token::OrOr","value":"Token::OrOr","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1327},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72425,"byte_end":72428,"line_start":55,"line_end":55,"column_start":5,"column_end":8},"name":"Not","qualname":"::mac::Token::Not","value":"Token::Not","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1329},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72434,"byte_end":72439,"line_start":56,"line_end":56,"column_start":5,"column_end":10},"name":"Tilde","qualname":"::mac::Token::Tilde","value":"Token::Tilde","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1331},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72445,"byte_end":72450,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"BinOp","qualname":"::mac::Token::BinOp","value":"Token::BinOp(BinOpToken)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1334},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72468,"byte_end":72475,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"BinOpEq","qualname":"::mac::Token::BinOpEq","value":"Token::BinOpEq(BinOpToken)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1337},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72520,"byte_end":72522,"line_start":61,"line_end":61,"column_start":5,"column_end":7},"name":"At","qualname":"::mac::Token::At","value":"Token::At","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1339},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72528,"byte_end":72531,"line_start":62,"line_end":62,"column_start":5,"column_end":8},"name":"Dot","qualname":"::mac::Token::Dot","value":"Token::Dot","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1341},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72537,"byte_end":72543,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"DotDot","qualname":"::mac::Token::DotDot","value":"Token::DotDot","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1343},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72549,"byte_end":72558,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"DotDotDot","qualname":"::mac::Token::DotDotDot","value":"Token::DotDotDot","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72564,"byte_end":72569,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Comma","qualname":"::mac::Token::Comma","value":"Token::Comma","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1347},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72575,"byte_end":72579,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Semi","qualname":"::mac::Token::Semi","value":"Token::Semi","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72585,"byte_end":72590,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Colon","qualname":"::mac::Token::Colon","value":"Token::Colon","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1351},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72596,"byte_end":72602,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"ModSep","qualname":"::mac::Token::ModSep","value":"Token::ModSep","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72608,"byte_end":72614,"line_start":69,"line_end":69,"column_start":5,"column_end":11},"name":"RArrow","qualname":"::mac::Token::RArrow","value":"Token::RArrow","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1355},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72620,"byte_end":72626,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"LArrow","qualname":"::mac::Token::LArrow","value":"Token::LArrow","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1357},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72632,"byte_end":72640,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"FatArrow","qualname":"::mac::Token::FatArrow","value":"Token::FatArrow","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72646,"byte_end":72651,"line_start":72,"line_end":72,"column_start":5,"column_end":10},"name":"Pound","qualname":"::mac::Token::Pound","value":"Token::Pound","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1361},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72657,"byte_end":72663,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Dollar","qualname":"::mac::Token::Dollar","value":"Token::Dollar","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1363},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72669,"byte_end":72677,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"Question","qualname":"::mac::Token::Question","value":"Token::Question","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72700,"byte_end":72707,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"Literal","qualname":"::mac::Token::Literal","value":"Token::Literal(Lit)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1368},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72742,"byte_end":72747,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Ident","qualname":"::mac::Token::Ident","value":"Token::Ident(Ident)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1371},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72760,"byte_end":72770,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Underscore","qualname":"::mac::Token::Underscore","value":"Token::Underscore","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1373},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72776,"byte_end":72784,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"name":"Lifetime","qualname":"::mac::Token::Lifetime","value":"Token::Lifetime(Ident)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1376},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72798,"byte_end":72808,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"DocComment","qualname":"::mac::Token::DocComment","value":"Token::DocComment(String)","parent":{"krate":0,"index":1308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1308},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72297,"byte_end":72302,"line_start":44,"line_end":44,"column_start":10,"column_end":15},"name":"Token","qualname":"::mac::Token","value":"pub enum Token {\n    Eq,\n    Lt,\n    Le,\n    EqEq,\n    Ne,\n    Ge,\n    Gt,\n    AndAnd,\n    OrOr,\n    Not,\n    Tilde,\n    BinOp(BinOpToken),\n    BinOpEq(BinOpToken),\n    At,\n    Dot,\n    DotDot,\n    DotDotDot,\n    Comma,\n    Semi,\n    Colon,\n    ModSep,\n    RArrow,\n    LArrow,\n    FatArrow,\n    Pound,\n    Dollar,\n    Question,\n    Literal(Lit),\n    Ident(Ident),\n    Underscore,\n    Lifetime(Ident),\n    DocComment(String),\n}","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1394},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72898,"byte_end":72902,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Plus","qualname":"::mac::BinOpToken::Plus","value":"BinOpToken::Plus","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72908,"byte_end":72913,"line_start":90,"line_end":90,"column_start":5,"column_end":10},"name":"Minus","qualname":"::mac::BinOpToken::Minus","value":"BinOpToken::Minus","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1398},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72919,"byte_end":72923,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Star","qualname":"::mac::BinOpToken::Star","value":"BinOpToken::Star","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1400},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72929,"byte_end":72934,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Slash","qualname":"::mac::BinOpToken::Slash","value":"BinOpToken::Slash","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72940,"byte_end":72947,"line_start":93,"line_end":93,"column_start":5,"column_end":12},"name":"Percent","qualname":"::mac::BinOpToken::Percent","value":"BinOpToken::Percent","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72953,"byte_end":72958,"line_start":94,"line_end":94,"column_start":5,"column_end":10},"name":"Caret","qualname":"::mac::BinOpToken::Caret","value":"BinOpToken::Caret","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1406},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72964,"byte_end":72967,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"And","qualname":"::mac::BinOpToken::And","value":"BinOpToken::And","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72973,"byte_end":72975,"line_start":96,"line_end":96,"column_start":5,"column_end":7},"name":"Or","qualname":"::mac::BinOpToken::Or","value":"BinOpToken::Or","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72981,"byte_end":72984,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"Shl","qualname":"::mac::BinOpToken::Shl","value":"BinOpToken::Shl","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72990,"byte_end":72993,"line_start":98,"line_end":98,"column_start":5,"column_end":8},"name":"Shr","qualname":"::mac::BinOpToken::Shr","value":"BinOpToken::Shr","parent":{"krate":0,"index":1393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1393},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72881,"byte_end":72891,"line_start":88,"line_end":88,"column_start":10,"column_end":20},"name":"BinOpToken","qualname":"::mac::BinOpToken","value":"pub enum BinOpToken {\n    Plus,\n    Minus,\n    Star,\n    Slash,\n    Percent,\n    Caret,\n    And,\n    Or,\n    Shl,\n    Shr,\n}","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1429},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73137,"byte_end":73142,"line_start":105,"line_end":105,"column_start":5,"column_end":10},"name":"Paren","qualname":"::mac::DelimToken::Paren","value":"DelimToken::Paren","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" A round parenthesis: `(` or `)`\n","sig":null,"attributes":[{"value":"/ A round parenthesis: `(` or `)`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73097,"byte_end":73132,"line_start":104,"line_end":104,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1431},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73185,"byte_end":73192,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"Bracket","qualname":"::mac::DelimToken::Bracket","value":"DelimToken::Bracket","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" A square bracket: `[` or `]`\n","sig":null,"attributes":[{"value":"/ A square bracket: `[` or `]`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73148,"byte_end":73180,"line_start":106,"line_end":106,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1433},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73232,"byte_end":73237,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Brace","qualname":"::mac::DelimToken::Brace","value":"DelimToken::Brace","parent":{"krate":0,"index":1428},"children":[],"decl_id":null,"docs":" A curly brace: `{` or `}`\n","sig":null,"attributes":[{"value":"/ A curly brace: `{` or `}`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73198,"byte_end":73227,"line_start":108,"line_end":108,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":1428},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":73080,"byte_end":73090,"line_start":103,"line_end":103,"column_start":10,"column_end":20},"name":"DelimToken","qualname":"::mac::DelimToken","value":"pub enum DelimToken {\n\n    /// A round parenthesis: `(` or `)`\n    Paren,\n\n    /// A square bracket: `[` or `]`\n    Bracket,\n\n    /// A curly brace: `{` or `}`\n    Brace,\n}","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433}],"decl_id":null,"docs":" A delimiter token\n","sig":null,"attributes":[{"value":"/ A delimiter token","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":72998,"byte_end":73019,"line_start":101,"line_end":101,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1455},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":74374,"byte_end":74384,"line_start":154,"line_end":154,"column_start":16,"column_end":26},"name":"token_tree","qualname":"::mac::parsing::token_tree","value":"pub fn token_tree(&str) -> ::synom::IResult<&str, TokenTree>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1511},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83131,"byte_end":83142,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { ident, vis, attrs, generics, body }","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516}],"decl_id":null,"docs":" Struct or enum sent to a `proc_macro_derive` macro.\n","sig":null,"attributes":[{"value":"/ Struct or enum sent to a `proc_macro_derive` macro.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83019,"byte_end":83074,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1512},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83189,"byte_end":83194,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"ident::Ident","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Name of the struct or enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83149,"byte_end":83180,"line_start":6,"line_end":6,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1513},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83254,"byte_end":83257,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Visibility of the struct or enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83208,"byte_end":83245,"line_start":9,"line_end":9,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1514},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83335,"byte_end":83340,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the whole struct or enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83276,"byte_end":83326,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1515},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83421,"byte_end":83429,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[{"value":"/ Generics required to complete the definition.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83363,"byte_end":83412,"line_start":15,"line_end":15,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1516},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83490,"byte_end":83494,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"body","qualname":"::derive::DeriveInput::body","value":"derive::Body","parent":{"krate":0,"index":1511},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[{"value":"/ Data within the struct or enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83446,"byte_end":83481,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1532},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83630,"byte_end":83634,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Enum","qualname":"::derive::Body::Enum","value":"Body::Enum(Vec<Variant>)","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":" It's an enum.\n","sig":null,"attributes":[{"value":"/ It's an enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83608,"byte_end":83625,"line_start":25,"line_end":25,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83678,"byte_end":83684,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Struct","qualname":"::derive::Body::Struct","value":"Body::Struct(VariantData)","parent":{"krate":0,"index":1531},"children":[],"decl_id":null,"docs":" It's a struct.\n","sig":null,"attributes":[{"value":"/ It's a struct.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83655,"byte_end":83673,"line_start":28,"line_end":28,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1531},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83597,"byte_end":83601,"line_start":24,"line_end":24,"column_start":10,"column_end":14},"name":"Body","qualname":"::derive::Body","value":"pub enum Body {\n\n    /// It's an enum.\n    Enum(Vec<Variant>),\n\n    /// It's a struct.\n    Struct(VariantData),\n}","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1535}],"decl_id":null,"docs":" Body of a derived struct or enum.\n","sig":null,"attributes":[{"value":"/ Body of a derived struct or enum.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":83505,"byte_end":83542,"line_start":22,"line_end":22,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":1854,"byte_end":1864,"line_start":70,"line_end":70,"column_start":10,"column_end":20},"name":"MacroInput","qualname":"::MacroInput","value":"DeriveInput","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":86958,"byte_end":86961,"line_start":4,"line_end":4,"column_start":5,"column_end":8},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[{"value":"/ The `+` operator (addition)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":86922,"byte_end":86953,"line_start":3,"line_end":3,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1558},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87006,"byte_end":87009,"line_start":6,"line_end":6,"column_start":5,"column_end":8},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[{"value":"/ The `-` operator (subtraction)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":86967,"byte_end":87001,"line_start":5,"line_end":5,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1560},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87057,"byte_end":87060,"line_start":8,"line_end":8,"column_start":5,"column_end":8},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[{"value":"/ The `*` operator (multiplication)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87015,"byte_end":87052,"line_start":7,"line_end":7,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1562},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87102,"byte_end":87105,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[{"value":"/ The `/` operator (division)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87066,"byte_end":87097,"line_start":9,"line_end":9,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1564},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87146,"byte_end":87149,"line_start":12,"line_end":12,"column_start":5,"column_end":8},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[{"value":"/ The `%` operator (modulus)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87111,"byte_end":87141,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87195,"byte_end":87198,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[{"value":"/ The `&&` operator (logical and)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87155,"byte_end":87190,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1568},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87243,"byte_end":87245,"line_start":16,"line_end":16,"column_start":5,"column_end":7},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[{"value":"/ The `||` operator (logical or)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87204,"byte_end":87238,"line_start":15,"line_end":15,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1570},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87290,"byte_end":87296,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[{"value":"/ The `^` operator (bitwise xor)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87251,"byte_end":87285,"line_start":17,"line_end":17,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87341,"byte_end":87347,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[{"value":"/ The `&` operator (bitwise and)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87302,"byte_end":87336,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1574},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87391,"byte_end":87396,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[{"value":"/ The `|` operator (bitwise or)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87353,"byte_end":87386,"line_start":21,"line_end":21,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1576},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87441,"byte_end":87444,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[{"value":"/ The `<<` operator (shift left)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87402,"byte_end":87436,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1578},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87490,"byte_end":87493,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[{"value":"/ The `>>` operator (shift right)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87450,"byte_end":87485,"line_start":25,"line_end":25,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1580},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87536,"byte_end":87538,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[{"value":"/ The `==` operator (equality)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87499,"byte_end":87531,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1582},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87581,"byte_end":87583,"line_start":30,"line_end":30,"column_start":5,"column_end":7},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[{"value":"/ The `<` operator (less than)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87544,"byte_end":87576,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1584},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87639,"byte_end":87641,"line_start":32,"line_end":32,"column_start":5,"column_end":7},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[{"value":"/ The `<=` operator (less than or equal to)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87589,"byte_end":87634,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1586},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87688,"byte_end":87690,"line_start":34,"line_end":34,"column_start":5,"column_end":7},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[{"value":"/ The `!=` operator (not equal to)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87647,"byte_end":87683,"line_start":33,"line_end":33,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1588},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87749,"byte_end":87751,"line_start":36,"line_end":36,"column_start":5,"column_end":7},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[{"value":"/ The `>=` operator (greater than or equal to)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87696,"byte_end":87744,"line_start":35,"line_end":35,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1590},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87797,"byte_end":87799,"line_start":38,"line_end":38,"column_start":5,"column_end":7},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[{"value":"/ The `>` operator (greater than)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87757,"byte_end":87792,"line_start":37,"line_end":37,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":1555},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":86910,"byte_end":86915,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"BinOp","qualname":"::op::BinOp","value":"pub enum BinOp {\n\n    /// The `+` operator (addition)\n    Add,\n\n    /// The `-` operator (subtraction)\n    Sub,\n\n    /// The `*` operator (multiplication)\n    Mul,\n\n    /// The `/` operator (division)\n    Div,\n\n    /// The `%` operator (modulus)\n    Rem,\n\n    /// The `&&` operator (logical and)\n    And,\n\n    /// The `||` operator (logical or)\n    Or,\n\n    /// The `^` operator (bitwise xor)\n    BitXor,\n\n    /// The `&` operator (bitwise and)\n    BitAnd,\n\n    /// The `|` operator (bitwise or)\n    BitOr,\n\n    /// The `<<` operator (shift left)\n    Shl,\n\n    /// The `>>` operator (shift right)\n    Shr,\n\n    /// The `==` operator (equality)\n    Eq,\n\n    /// The `<` operator (less than)\n    Lt,\n\n    /// The `<=` operator (less than or equal to)\n    Le,\n\n    /// The `!=` operator (not equal to)\n    Ne,\n\n    /// The `>=` operator (greater than or equal to)\n    Ge,\n\n    /// The `>` operator (greater than)\n    Gt,\n}","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1607},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87918,"byte_end":87923,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[{"value":"/ The `*` operator for dereferencing","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87875,"byte_end":87913,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1609},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87976,"byte_end":87979,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[{"value":"/ The `!` operator for logical inversion","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87929,"byte_end":87971,"line_start":45,"line_end":45,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":88023,"byte_end":88026,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[{"value":"/ The `-` operator for negation","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87985,"byte_end":88018,"line_start":47,"line_end":47,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1606},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":87864,"byte_end":87868,"line_start":42,"line_end":42,"column_start":10,"column_end":14},"name":"UnOp","qualname":"::op::UnOp","value":"pub enum UnOp {\n\n    /// The `*` operator for dereferencing\n    Deref,\n\n    /// The `!` operator for logical inversion\n    Not,\n\n    /// The `-` operator for negation\n    Neg,\n}","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":90007,"byte_end":90009,"line_start":131,"line_end":131,"column_start":16,"column_end":18},"name":"op","qualname":"<BinOp>::op","value":"pub fn op(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":90740,"byte_end":90749,"line_start":154,"line_end":154,"column_start":16,"column_end":25},"name":"assign_op","qualname":"<BinOp>::assign_op","value":"pub fn assign_op(&Self) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91464,"byte_end":91466,"line_start":178,"line_end":178,"column_start":16,"column_end":18},"name":"op","qualname":"<UnOp>::op","value":"pub fn op(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1651},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":91968,"byte_end":91973,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"Slice","qualname":"::ty::Ty::Slice","value":"Ty::Slice(Box<Ty>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A variable-length array (`[T]`)\n","sig":null,"attributes":[{"value":"/ A variable-length array (`[T]`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":91928,"byte_end":91963,"line_start":6,"line_end":6,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1654},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92028,"byte_end":92033,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"Array","qualname":"::ty::Ty::Array","value":"Ty::Array(Box<Ty>, ConstExpr)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A fixed length array (`[T; n]`)\n","sig":null,"attributes":[{"value":"/ A fixed length array (`[T; n]`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":91988,"byte_end":92023,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1658},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92106,"byte_end":92109,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Ptr","qualname":"::ty::Ty::Ptr","value":"Ty::Ptr(Box<MutTy>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A raw pointer (`*const T` or `*mut T`)\n","sig":null,"attributes":[{"value":"/ A raw pointer (`*const T` or `*mut T`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92059,"byte_end":92101,"line_start":10,"line_end":10,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92172,"byte_end":92176,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Rptr","qualname":"::ty::Ty::Rptr","value":"Ty::Rptr(Option<Lifetime>, Box<MutTy>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A reference (`&'a T` or `&'a mut T`)\n","sig":null,"attributes":[{"value":"/ A reference (`&'a T` or `&'a mut T`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92127,"byte_end":92167,"line_start":12,"line_end":12,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92263,"byte_end":92269,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"BareFn","qualname":"::ty::Ty::BareFn","value":"Ty::BareFn(Box<BareFnTy>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A bare function (e.g. `fn(usize) -> bool`)\n","sig":null,"attributes":[{"value":"/ A bare function (e.g. `fn(usize) -> bool`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92212,"byte_end":92258,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1668},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92319,"byte_end":92324,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Never","qualname":"::ty::Ty::Never","value":"Ty::Never","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" The never type (`!`)\n","sig":null,"attributes":[{"value":"/ The never type (`!`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92290,"byte_end":92314,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1670},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92368,"byte_end":92371,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"Tup","qualname":"::ty::Ty::Tup","value":"Ty::Tup(Vec<Ty>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A tuple (`(A, B, C, D, ...)`)\n","sig":null,"attributes":[{"value":"/ A tuple (`(A, B, C, D, ...)`)","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92330,"byte_end":92363,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1673},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92566,"byte_end":92570,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Path","qualname":"::ty::Ty::Path","value":"Ty::Path(Option<QSelf>, Path)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A path (`module::module::...::Type`), optionally\n \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.","sig":null,"attributes":[{"value":"/ A path (`module::module::...::Type`), optionally","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92386,"byte_end":92438,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/ \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92443,"byte_end":92499,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92504,"byte_end":92507,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Type parameters are stored in the Path itself","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92512,"byte_end":92561,"line_start":23,"line_end":23,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1677},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92700,"byte_end":92711,"line_start":27,"line_end":27,"column_start":5,"column_end":16},"name":"TraitObject","qualname":"::ty::Ty::TraitObject","value":"Ty::TraitObject(Vec<TyParamBound>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3`\n where `Bound` is a trait or a lifetime.\n","sig":null,"attributes":[{"value":"/ A trait object type `Bound1 + Bound2 + Bound3`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92597,"byte_end":92647,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"/ where `Bound` is a trait or a lifetime.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92652,"byte_end":92695,"line_start":26,"line_end":26,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1680},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92832,"byte_end":92841,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"ImplTrait","qualname":"::ty::Ty::ImplTrait","value":"Ty::ImplTrait(Vec<TyParamBound>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type\n where `Bound` is a trait or a lifetime.\n","sig":null,"attributes":[{"value":"/ An `impl Bound1 + Bound2 + Bound3` type","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92736,"byte_end":92779,"line_start":28,"line_end":28,"column_start":5,"column_end":48}},{"value":"/ where `Bound` is a trait or a lifetime.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92784,"byte_end":92827,"line_start":29,"line_end":29,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1683},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92932,"byte_end":92937,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Paren","qualname":"::ty::Ty::Paren","value":"Ty::Paren(Box<Ty>)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" No-op; kept solely so that we can pretty-print faithfully\n","sig":null,"attributes":[{"value":"/ No-op; kept solely so that we can pretty-print faithfully","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92866,"byte_end":92927,"line_start":31,"line_end":31,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1686},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93089,"byte_end":93094,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"Infer","qualname":"::ty::Ty::Infer","value":"Ty::Infer","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" TyKind::Infer means the type should be inferred instead of it having been\n specified. This can appear anywhere in a type.\n","sig":null,"attributes":[{"value":"/ TyKind::Infer means the type should be inferred instead of it having been","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":92952,"byte_end":93029,"line_start":33,"line_end":33,"column_start":5,"column_end":82}},{"value":"/ specified. This can appear anywhere in a type.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93034,"byte_end":93084,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1688},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93138,"byte_end":93141,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Mac","qualname":"::ty::Ty::Mac","value":"Ty::Mac(Mac)","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" A macro in the type position.\n","sig":null,"attributes":[{"value":"/ A macro in the type position.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93100,"byte_end":93133,"line_start":36,"line_end":36,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1650},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":91919,"byte_end":91921,"line_start":5,"line_end":5,"column_start":10,"column_end":12},"name":"Ty","qualname":"::ty::Ty","value":"pub enum Ty {\n\n    /// A variable-length array (`[T]`)\n    Slice(Box<Ty>),\n\n    /// A fixed length array (`[T; n]`)\n    Array(Box<Ty>, ConstExpr),\n\n    /// A raw pointer (`*const T` or `*mut T`)\n    Ptr(Box<MutTy>),\n\n    /// A reference (`&'a T` or `&'a mut T`)\n    Rptr(Option<Lifetime>, Box<MutTy>),\n\n    /// A bare function (e.g. `fn(usize) -> bool`)\n    BareFn(Box<BareFnTy>),\n\n    /// The never type (`!`)\n    Never,\n\n    /// A tuple (`(A, B, C, D, ...)`)\n    Tup(Vec<Ty>),\n\n    /// A path (`module::module::...::Type`), optionally\n    /// \"qualified\", e.g. `<Vec<T> as SomeTrait>::SomeType`.\n    ///\n    /// Type parameters are stored in the Path itself\n    Path(Option<QSelf>, Path),\n\n    /// A trait object type `Bound1 + Bound2 + Bound3`\n    /// where `Bound` is a trait or a lifetime.\n    TraitObject(Vec<TyParamBound>),\n\n    /// An `impl Bound1 + Bound2 + Bound3` type\n    /// where `Bound` is a trait or a lifetime.\n    ImplTrait(Vec<TyParamBound>),\n\n    /// No-op; kept solely so that we can pretty-print faithfully\n    Paren(Box<Ty>),\n\n    /// TyKind::Infer means the type should be inferred instead of it having been\n    /// specified. This can appear anywhere in a type.\n    Infer,\n\n    /// A macro in the type position.\n    Mac(Mac),\n}","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1658},{"krate":0,"index":1661},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1688}],"decl_id":null,"docs":" The different kinds of types recognized by the compiler\n","sig":null,"attributes":[{"value":"/ The different kinds of types recognized by the compiler","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":91805,"byte_end":91864,"line_start":3,"line_end":3,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1705},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93207,"byte_end":93212,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"MutTy","qualname":"::ty::MutTy","value":"MutTy { ty, mutability }","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1706},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93223,"byte_end":93225,"line_start":42,"line_end":42,"column_start":9,"column_end":11},"name":"ty","qualname":"::ty::MutTy::ty","value":"ty::Ty","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1707},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93239,"byte_end":93249,"line_start":43,"line_end":43,"column_start":9,"column_end":19},"name":"mutability","qualname":"::ty::MutTy::mutability","value":"ty::Mutability","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1723},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93343,"byte_end":93350,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"Mutable","qualname":"::ty::Mutability::Mutable","value":"Mutability::Mutable","parent":{"krate":0,"index":1722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1725},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93356,"byte_end":93365,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Immutable","qualname":"::ty::Mutability::Immutable","value":"Mutability::Immutable","parent":{"krate":0,"index":1722},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1722},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93326,"byte_end":93336,"line_start":47,"line_end":47,"column_start":10,"column_end":20},"name":"Mutability","qualname":"::ty::Mutability","value":"pub enum Mutability { Mutable, Immutable, }","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1741},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93619,"byte_end":93623,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"Path","qualname":"::ty::Path","value":"Path { global, segments }","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":" A \"Path\" is essentially Rust's notion of a name.","sig":null,"attributes":[{"value":"/ A \"Path\" is essentially Rust's notion of a name.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93370,"byte_end":93422,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93423,"byte_end":93426,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ It's represented as a sequence of identifiers,","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93427,"byte_end":93477,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ along with a bunch of supporting information.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93478,"byte_end":93527,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93528,"byte_end":93531,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ E.g. `std::cmp::PartialEq`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93532,"byte_end":93562,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93750,"byte_end":93756,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"global","qualname":"::ty::Path::global","value":"bool","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":" A `::foo` path, is relative to the crate root rather than current\n module (like paths in an import).\n","sig":null,"attributes":[{"value":"/ A `::foo` path, is relative to the crate root rather than current","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93630,"byte_end":93699,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ module (like paths in an import).","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93704,"byte_end":93741,"line_start":61,"line_end":61,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93836,"byte_end":93844,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"segments","qualname":"::ty::Path::segments","value":"std::vec::Vec<ty::PathSegment>","parent":{"krate":0,"index":1741},"children":[],"decl_id":null,"docs":" The segments in the path: the things separated by `::`.\n","sig":null,"attributes":[{"value":"/ The segments in the path: the things separated by `::`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93768,"byte_end":93827,"line_start":63,"line_end":63,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1758},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94243,"byte_end":94254,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"PathSegment","qualname":"::ty::PathSegment","value":"PathSegment { ident, parameters }","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760}],"decl_id":null,"docs":" A segment of a path: an identifier, an optional lifetime, and a set of types.","sig":null,"attributes":[{"value":"/ A segment of a path: an identifier, an optional lifetime, and a set of types.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94064,"byte_end":94145,"line_start":78,"line_end":78,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94146,"byte_end":94149,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ E.g. `std`, `String` or `Box<T>`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94150,"byte_end":94186,"line_start":80,"line_end":80,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1759},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94318,"byte_end":94323,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"ident","qualname":"::ty::PathSegment::ident","value":"ident::Ident","parent":{"krate":0,"index":1758},"children":[],"decl_id":null,"docs":" The identifier portion of this path segment.\n","sig":null,"attributes":[{"value":"/ The identifier portion of this path segment.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94261,"byte_end":94309,"line_start":83,"line_end":83,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1760},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94631,"byte_end":94641,"line_start":90,"line_end":90,"column_start":9,"column_end":19},"name":"parameters","qualname":"::ty::PathSegment::parameters","value":"ty::PathParameters","parent":{"krate":0,"index":1758},"children":[],"decl_id":null,"docs":" Type/lifetime parameters attached to this path. They come in\n two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that\n this is more than just simple syntactic sugar; the use of\n parens affects the region binding rules, so we preserve the\n distinction.\n","sig":null,"attributes":[{"value":"/ Type/lifetime parameters attached to this path. They come in","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94336,"byte_end":94400,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/ two flavors: `Path<A,B,C>` and `Path(A,B) -> C`. Note that","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94405,"byte_end":94467,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ this is more than just simple syntactic sugar; the use of","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94472,"byte_end":94533,"line_start":87,"line_end":87,"column_start":5,"column_end":66}},{"value":"/ parens affects the region binding rules, so we preserve the","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94538,"byte_end":94601,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ distinction.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94606,"byte_end":94622,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1776},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95116,"byte_end":95130,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"AngleBracketed","qualname":"::ty::PathParameters::AngleBracketed","value":"PathParameters::AngleBracketed(AngleBracketedParameterData)","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`\n","sig":null,"attributes":[{"value":"/ The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95054,"byte_end":95111,"line_start":109,"line_end":109,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1779},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95214,"byte_end":95227,"line_start":112,"line_end":112,"column_start":5,"column_end":18},"name":"Parenthesized","qualname":"::ty::PathParameters::Parenthesized","value":"PathParameters::Parenthesized(ParenthesizedParameterData)","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" The `(A, B)` and `C` in `Foo(A, B) -> C`\n","sig":null,"attributes":[{"value":"/ The `(A, B)` and `C` in `Foo(A, B) -> C`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95165,"byte_end":95209,"line_start":111,"line_end":111,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1775},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95033,"byte_end":95047,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"PathParameters","qualname":"::ty::PathParameters","value":"pub enum PathParameters {\n\n    /// The `<'a, A, B, C>` in `foo::bar::baz::<'a, A, B, C>`\n    AngleBracketed(AngleBracketedParameterData),\n\n    /// The `(A, B)` and `C` in `Foo(A, B) -> C`\n    Parenthesized(ParenthesizedParameterData),\n}","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1779}],"decl_id":null,"docs":" Parameters of a path segment.","sig":null,"attributes":[{"value":"/ Parameters of a path segment.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94875,"byte_end":94908,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94909,"byte_end":94912,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ E.g. `<A, B>` as in `Foo<A, B>` or `(A, B)` as in `Foo(A, B)`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94913,"byte_end":94978,"line_start":106,"line_end":106,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95293,"byte_end":95297,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"none","qualname":"<PathParameters>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95407,"byte_end":95415,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathParameters>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95826,"byte_end":95853,"line_start":133,"line_end":133,"column_start":12,"column_end":39},"name":"AngleBracketedParameterData","qualname":"::ty::AngleBracketedParameterData","value":"AngleBracketedParameterData { lifetimes, types, bindings }","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" A path like `Foo<'a, T>`\n","sig":null,"attributes":[{"value":"/ A path like `Foo<'a, T>`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95732,"byte_end":95760,"line_start":131,"line_end":131,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95919,"byte_end":95928,"line_start":135,"line_end":135,"column_start":9,"column_end":18},"name":"lifetimes","qualname":"::ty::AngleBracketedParameterData::lifetimes","value":"std::vec::Vec<generics::Lifetime>","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" The lifetime parameters for this path segment.\n","sig":null,"attributes":[{"value":"/ The lifetime parameters for this path segment.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95860,"byte_end":95910,"line_start":134,"line_end":134,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96016,"byte_end":96021,"line_start":137,"line_end":137,"column_start":9,"column_end":14},"name":"types","qualname":"::ty::AngleBracketedParameterData::types","value":"std::vec::Vec<ty::Ty>","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" The type parameters for this path segment, if present.\n","sig":null,"attributes":[{"value":"/ The type parameters for this path segment, if present.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95949,"byte_end":96007,"line_start":136,"line_end":136,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96149,"byte_end":96157,"line_start":141,"line_end":141,"column_start":9,"column_end":17},"name":"bindings","qualname":"::ty::AngleBracketedParameterData::bindings","value":"std::vec::Vec<ty::TypeBinding>","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" Bindings (equality constraints) on associated types, if present.","sig":null,"attributes":[{"value":"/ Bindings (equality constraints) on associated types, if present.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96036,"byte_end":96104,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96109,"byte_end":96112,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ E.g., `Foo<A=Bar>`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96117,"byte_end":96140,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1816},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96284,"byte_end":96295,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"TypeBinding","qualname":"::ty::TypeBinding","value":"TypeBinding { ident, ty }","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"decl_id":null,"docs":" Bind a type to an associated type: `A=Foo`.\n","sig":null,"attributes":[{"value":"/ Bind a type to an associated type: `A=Foo`.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96180,"byte_end":96227,"line_start":144,"line_end":144,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1817},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96306,"byte_end":96311,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"name":"ident","qualname":"::ty::TypeBinding::ident","value":"ident::Ident","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1818},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96328,"byte_end":96330,"line_start":148,"line_end":148,"column_start":9,"column_end":11},"name":"ty","qualname":"::ty::TypeBinding::ty","value":"ty::Ty","parent":{"krate":0,"index":1816},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96427,"byte_end":96453,"line_start":153,"line_end":153,"column_start":12,"column_end":38},"name":"ParenthesizedParameterData","qualname":"::ty::ParenthesizedParameterData","value":"ParenthesizedParameterData { inputs, output }","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835}],"decl_id":null,"docs":" A path like `Foo(A,B) -> C`\n","sig":null,"attributes":[{"value":"/ A path like `Foo(A,B) -> C`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96339,"byte_end":96370,"line_start":151,"line_end":151,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1834},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96481,"byte_end":96487,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"name":"inputs","qualname":"::ty::ParenthesizedParameterData::inputs","value":"std::vec::Vec<ty::Ty>","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[{"value":"/ `(A, B)`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96460,"byte_end":96472,"line_start":154,"line_end":154,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":1835},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96518,"byte_end":96524,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"output","qualname":"::ty::ParenthesizedParameterData::output","value":"std::option::Option<ty::Ty>","parent":{"krate":0,"index":1833},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[{"value":"/ `C`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96502,"byte_end":96509,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96597,"byte_end":96609,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"PolyTraitRef","qualname":"::ty::PolyTraitRef","value":"PolyTraitRef { bound_lifetimes, trait_ref }","parent":null,"children":[{"krate":0,"index":1851},{"krate":0,"index":1852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96658,"byte_end":96673,"line_start":163,"line_end":163,"column_start":9,"column_end":24},"name":"bound_lifetimes","qualname":"::ty::PolyTraitRef::bound_lifetimes","value":"std::vec::Vec<generics::LifetimeDef>","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" The `'a` in `<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `'a` in `<'a> Foo<&'a T>`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96616,"byte_end":96649,"line_start":162,"line_end":162,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96747,"byte_end":96756,"line_start":165,"line_end":165,"column_start":9,"column_end":18},"name":"trait_ref","qualname":"::ty::PolyTraitRef::trait_ref","value":"ty::Path","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `Foo<&'a T>` in `<'a> Foo<&'a T>`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96697,"byte_end":96738,"line_start":164,"line_end":164,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1867},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97265,"byte_end":97270,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"QSelf","qualname":"::ty::QSelf","value":"QSelf { ty, position }","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869}],"decl_id":null,"docs":" The explicit Self type in a \"qualified path\". The actual\n path, including the trait and the associated item, is stored\n separately. `position` represents the index of the associated\n item qualified with this Self type.","sig":null,"attributes":[{"value":"/ The explicit Self type in a \"qualified path\". The actual","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96767,"byte_end":96827,"line_start":168,"line_end":168,"column_start":1,"column_end":61}},{"value":"/ path, including the trait and the associated item, is stored","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96828,"byte_end":96892,"line_start":169,"line_end":169,"column_start":1,"column_end":65}},{"value":"/ separately. `position` represents the index of the associated","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96893,"byte_end":96958,"line_start":170,"line_end":170,"column_start":1,"column_end":66}},{"value":"/ item qualified with this Self type.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96959,"byte_end":96998,"line_start":171,"line_end":171,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":96999,"byte_end":97002,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97003,"byte_end":97021,"line_start":173,"line_end":173,"column_start":1,"column_end":19}},{"value":"/ <Vec<T> as a::b::Trait>::AssociatedItem","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97022,"byte_end":97065,"line_start":174,"line_end":174,"column_start":1,"column_end":44}},{"value":"/  ^~~~~     ~~~~~~~~~~~~~~^","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97066,"byte_end":97096,"line_start":175,"line_end":175,"column_start":1,"column_end":31}},{"value":"/  ty        position = 3","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97097,"byte_end":97124,"line_start":176,"line_end":176,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97125,"byte_end":97128,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ <Vec<T>>::AssociatedItem","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97129,"byte_end":97157,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/  ^~~~~    ^","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97158,"byte_end":97173,"line_start":179,"line_end":179,"column_start":1,"column_end":16}},{"value":"/  ty       position = 0","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97174,"byte_end":97200,"line_start":180,"line_end":180,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97201,"byte_end":97208,"line_start":181,"line_end":181,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1868},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97281,"byte_end":97283,"line_start":184,"line_end":184,"column_start":9,"column_end":11},"name":"ty","qualname":"::ty::QSelf::ty","value":"std::boxed::Box<ty::Ty>","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1869},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97302,"byte_end":97310,"line_start":185,"line_end":185,"column_start":9,"column_end":17},"name":"position","qualname":"::ty::QSelf::position","value":"usize","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1884},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97378,"byte_end":97386,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"BareFnTy","qualname":"::ty::BareFnTy","value":"BareFnTy { unsafety, abi, lifetimes, inputs, output, variadic }","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1885},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97397,"byte_end":97405,"line_start":190,"line_end":190,"column_start":9,"column_end":17},"name":"unsafety","qualname":"::ty::BareFnTy::unsafety","value":"ty::Unsafety","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1886},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97425,"byte_end":97428,"line_start":191,"line_end":191,"column_start":9,"column_end":12},"name":"abi","qualname":"::ty::BareFnTy::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1887},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97451,"byte_end":97460,"line_start":192,"line_end":192,"column_start":9,"column_end":18},"name":"lifetimes","qualname":"::ty::BareFnTy::lifetimes","value":"std::vec::Vec<generics::LifetimeDef>","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1888},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97488,"byte_end":97494,"line_start":193,"line_end":193,"column_start":9,"column_end":15},"name":"inputs","qualname":"::ty::BareFnTy::inputs","value":"std::vec::Vec<ty::BareFnArg>","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1889},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97520,"byte_end":97526,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"name":"output","qualname":"::ty::BareFnTy::output","value":"ty::FunctionRetTy","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1890},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97551,"byte_end":97559,"line_start":195,"line_end":195,"column_start":9,"column_end":17},"name":"variadic","qualname":"::ty::BareFnTy::variadic","value":"bool","parent":{"krate":0,"index":1884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1906},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97645,"byte_end":97651,"line_start":200,"line_end":200,"column_start":5,"column_end":11},"name":"Unsafe","qualname":"::ty::Unsafety::Unsafe","value":"Unsafety::Unsafe","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97657,"byte_end":97663,"line_start":201,"line_end":201,"column_start":5,"column_end":11},"name":"Normal","qualname":"::ty::Unsafety::Normal","value":"Unsafety::Normal","parent":{"krate":0,"index":1905},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1905},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97630,"byte_end":97638,"line_start":199,"line_end":199,"column_start":10,"column_end":18},"name":"Unsafety","qualname":"::ty::Unsafety","value":"pub enum Unsafety { Unsafe, Normal, }","parent":null,"children":[{"krate":0,"index":1906},{"krate":0,"index":1908}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1925},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97732,"byte_end":97737,"line_start":206,"line_end":206,"column_start":5,"column_end":10},"name":"Named","qualname":"::ty::Abi::Named","value":"Abi::Named(String)","parent":{"krate":0,"index":1924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1928},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97751,"byte_end":97755,"line_start":207,"line_end":207,"column_start":5,"column_end":9},"name":"Rust","qualname":"::ty::Abi::Rust","value":"Abi::Rust","parent":{"krate":0,"index":1924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1924},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97722,"byte_end":97725,"line_start":205,"line_end":205,"column_start":10,"column_end":13},"name":"Abi","qualname":"::ty::Abi","value":"pub enum Abi { Named(String), Rust, }","parent":null,"children":[{"krate":0,"index":1925},{"krate":0,"index":1928}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1944},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97905,"byte_end":97914,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { name, ty }","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946}],"decl_id":null,"docs":" An argument in a function type.","sig":null,"attributes":[{"value":"/ An argument in a function type.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97760,"byte_end":97795,"line_start":210,"line_end":210,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97796,"byte_end":97799,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ E.g. `bar: usize` as in `fn foo(bar: usize)`","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97800,"byte_end":97848,"line_start":212,"line_end":212,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97925,"byte_end":97929,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<ident::Ident>","parent":{"krate":0,"index":1944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":97954,"byte_end":97956,"line_start":216,"line_end":216,"column_start":9,"column_end":11},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Ty","parent":{"krate":0,"index":1944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1962},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98222,"byte_end":98229,"line_start":226,"line_end":226,"column_start":5,"column_end":12},"name":"Default","qualname":"::ty::FunctionRetTy::Default","value":"FunctionRetTy::Default","parent":{"krate":0,"index":1961},"children":[],"decl_id":null,"docs":" Return type is not specified.","sig":null,"attributes":[{"value":"/ Return type is not specified.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98039,"byte_end":98072,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98077,"byte_end":98080,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Functions default to `()` and","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98085,"byte_end":98118,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/ closures default to inference. Span points to where return","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98123,"byte_end":98185,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"/ type would be inserted.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98190,"byte_end":98217,"line_start":225,"line_end":225,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1964},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98259,"byte_end":98261,"line_start":228,"line_end":228,"column_start":5,"column_end":7},"name":"Ty","qualname":"::ty::FunctionRetTy::Ty","value":"FunctionRetTy::Ty(Ty)","parent":{"krate":0,"index":1961},"children":[],"decl_id":null,"docs":" Everything else\n","sig":null,"attributes":[{"value":"/ Everything else","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98235,"byte_end":98254,"line_start":227,"line_end":227,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1961},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98019,"byte_end":98032,"line_start":220,"line_end":220,"column_start":10,"column_end":23},"name":"FunctionRetTy","qualname":"::ty::FunctionRetTy","value":"pub enum FunctionRetTy {\n\n    /// Return type is not specified.\n    ///\n    /// Functions default to `()` and\n    /// closures default to inference. Span points to where return\n    /// type would be inserted.\n    Default,\n\n    /// Everything else\n    Ty(Ty),\n}","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1981},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":98767,"byte_end":98769,"line_start":247,"line_end":247,"column_start":16,"column_end":18},"name":"ty","qualname":"::ty::parsing::ty","value":"pub fn ty(&str) -> ::synom::IResult<&str, Ty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2004},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":105081,"byte_end":105085,"line_start":472,"line_end":472,"column_start":16,"column_end":20},"name":"path","qualname":"::ty::parsing::path","value":"pub fn path(&str) -> ::synom::IResult<&str, Path>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":2511,"byte_end":2529,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"parse_derive_input","qualname":"::parsing::parse_derive_input","value":"pub fn parse_derive_input(&str) -> Result<DeriveInput, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":488},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3274,"byte_end":3284,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"parse_type","qualname":"::parsing::parse_type","value":"pub fn parse_type(&str) -> Result<Ty, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3387,"byte_end":3397,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"parse_path","qualname":"::parsing::parse_path","value":"pub fn parse_path(&str) -> Result<Path, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3504,"byte_end":3522,"line_start":130,"line_end":130,"column_start":12,"column_end":30},"name":"parse_where_clause","qualname":"::parsing::parse_where_clause","value":"pub fn parse_where_clause(&str) -> Result<WhereClause, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":491},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3658,"byte_end":3675,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"parse_token_trees","qualname":"::parsing::parse_token_trees","value":"pub fn parse_token_trees(&str) -> Result<Vec<TokenTree>, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":492},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3807,"byte_end":3818,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"parse_ident","qualname":"::parsing::parse_ident","value":"pub fn parse_ident(&str) -> Result<Ident, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":3936,"byte_end":3956,"line_start":142,"line_end":142,"column_start":12,"column_end":32},"name":"parse_ty_param_bound","qualname":"::parsing::parse_ty_param_bound","value":"pub fn parse_ty_param_bound(&str) -> Result<TyParamBound, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":4133,"byte_end":4149,"line_start":148,"line_end":148,"column_start":12,"column_end":28},"name":"parse_outer_attr","qualname":"::parsing::parse_outer_attr","value":"pub fn parse_outer_attr(&str) -> Result<Attribute, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":4528,"byte_end":4545,"line_start":159,"line_end":159,"column_start":12,"column_end":29},"name":"parse_macro_input","qualname":"::parsing::parse_macro_input","value":"pub fn parse_macro_input(&str) -> Result<MacroInput, String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":498},"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5415,"byte_end":5420,"line_start":185,"line_end":185,"column_start":9,"column_end":14},"name":"parse","qualname":"::parse","value":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"decl_id":null,"docs":" This module contains a set of exported nom parsers which can be used to\n parse custom grammars when used alongside the `synom` crate.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5379,"byte_end":5406,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"/ This module contains a set of exported nom parsers which can be used to","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5427,"byte_end":5502,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ parse custom grammars when used alongside the `synom` crate.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5507,"byte_end":5571,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5576,"byte_end":5579,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Internally, `syn` uses a fork of `nom` called `synom` which resolves a","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5584,"byte_end":5658,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ persistent pitfall of using `nom` to parse Rust by eliminating the","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5663,"byte_end":5733,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ `IResult::Incomplete` variant. The `synom` crate should be used instead","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5738,"byte_end":5813,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ of `nom` when working with the parsers in this module.","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lib.rs","byte_start":5818,"byte_end":5876,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6575,"byte_end":6584,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7523,"byte_end":7531,"line_start":52,"line_end":52,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8502,"byte_end":8503,"line_start":89,"line_end":89,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":12326,"byte_end":12335,"line_start":233,"line_end":233,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":13864,"byte_end":13872,"line_start":272,"line_end":272,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":14582,"byte_end":14596,"line_start":293,"line_end":293,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":18485,"byte_end":18494,"line_start":131,"line_end":131,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":20168,"byte_end":20173,"line_start":175,"line_end":175,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20961,"byte_end":20972,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":26028,"byte_end":26035,"line_start":231,"line_end":231,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":26449,"byte_end":26460,"line_start":245,"line_end":245,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":27050,"byte_end":27055,"line_start":263,"line_end":263,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":27460,"byte_end":27470,"line_start":277,"line_end":277,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38526,"byte_end":38534,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39325,"byte_end":39335,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39616,"byte_end":39624,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40155,"byte_end":40166,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40621,"byte_end":40628,"line_start":105,"line_end":105,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41583,"byte_end":41594,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":46934,"byte_end":46942,"line_start":328,"line_end":328,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":47529,"byte_end":47541,"line_start":344,"line_end":344,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":48612,"byte_end":48622,"line_start":371,"line_end":371,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":49633,"byte_end":49642,"line_start":397,"line_end":397,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50016,"byte_end":50024,"line_start":408,"line_end":408,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50159,"byte_end":50170,"line_start":414,"line_end":414,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50510,"byte_end":50517,"line_start":425,"line_end":425,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51001,"byte_end":51013,"line_start":440,"line_end":440,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51548,"byte_end":51559,"line_start":455,"line_end":455,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51815,"byte_end":51829,"line_start":464,"line_end":464,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":52362,"byte_end":52381,"line_start":480,"line_end":480,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":52915,"byte_end":52935,"line_start":496,"line_end":496,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":53224,"byte_end":53240,"line_start":506,"line_end":506,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53568,"byte_end":53573,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53676,"byte_end":53681,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53784,"byte_end":53789,"line_start":19,"line_end":19,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53892,"byte_end":53897,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53980,"byte_end":53985,"line_start":31,"line_end":31,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54078,"byte_end":54083,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54159,"byte_end":54164,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54317,"byte_end":54322,"line_start":49,"line_end":49,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":56756,"byte_end":56761,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57668,"byte_end":57671,"line_start":32,"line_end":32,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57788,"byte_end":57791,"line_start":38,"line_end":38,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57909,"byte_end":57912,"line_start":44,"line_end":44,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58035,"byte_end":58038,"line_start":50,"line_end":50,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58158,"byte_end":58161,"line_start":56,"line_end":56,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58252,"byte_end":58255,"line_start":62,"line_end":62,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":67349,"byte_end":67352,"line_start":410,"line_end":410,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":69620,"byte_end":69625,"line_start":457,"line_end":457,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":70417,"byte_end":70424,"line_start":475,"line_end":475,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":78589,"byte_end":78592,"line_start":305,"line_end":305,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":78844,"byte_end":78853,"line_start":315,"line_end":315,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79129,"byte_end":79139,"line_start":324,"line_end":324,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79611,"byte_end":79620,"line_start":342,"line_end":342,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79892,"byte_end":79897,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":81819,"byte_end":81829,"line_start":393,"line_end":393,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":82883,"byte_end":82893,"line_start":425,"line_end":425,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":85119,"byte_end":85130,"line_start":81,"line_end":81,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":89984,"byte_end":89989,"line_start":130,"line_end":130,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91319,"byte_end":91324,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91442,"byte_end":91446,"line_start":177,"line_end":177,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91675,"byte_end":91679,"line_start":187,"line_end":187,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93887,"byte_end":93891,"line_start":67,"line_end":67,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94682,"byte_end":94693,"line_start":93,"line_end":93,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95265,"byte_end":95279,"line_start":115,"line_end":115,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":108426,"byte_end":108428,"line_start":586,"line_end":586,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":111805,"byte_end":111815,"line_start":673,"line_end":673,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112009,"byte_end":112013,"line_start":681,"line_end":681,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112331,"byte_end":112342,"line_start":692,"line_end":692,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112713,"byte_end":112727,"line_start":704,"line_end":704,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":113131,"byte_end":113158,"line_start":717,"line_end":717,"column_start":23,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114267,"byte_end":114278,"line_start":755,"line_end":755,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114484,"byte_end":114510,"line_start":763,"line_end":763,"column_start":23,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114868,"byte_end":114880,"line_start":775,"line_end":775,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":115262,"byte_end":115270,"line_start":787,"line_end":787,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116168,"byte_end":116177,"line_start":814,"line_end":814,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116447,"byte_end":116455,"line_start":824,"line_end":824,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116736,"byte_end":116739,"line_start":835,"line_end":835,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":6575,"byte_end":6584,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":7523,"byte_end":7531,"line_start":52,"line_end":52,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":8502,"byte_end":8503,"line_start":89,"line_end":89,"column_start":33,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":20},"to":{"krate":0,"index":13}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":12326,"byte_end":12335,"line_start":233,"line_end":233,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":515},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":13864,"byte_end":13872,"line_start":272,"line_end":272,"column_start":23,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":552},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/attr.rs","byte_start":14582,"byte_end":14596,"line_start":293,"line_end":293,"column_start":23,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":578},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":18485,"byte_end":18494,"line_start":131,"line_end":131,"column_start":23,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":604},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/constant.rs","byte_start":20168,"byte_end":20173,"line_start":175,"line_end":175,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":652},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":20961,"byte_end":20972,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":26028,"byte_end":26035,"line_start":231,"line_end":231,"column_start":23,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":677},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":26449,"byte_end":26460,"line_start":245,"line_end":245,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":696},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":27050,"byte_end":27055,"line_start":263,"line_end":263,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":719},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/data.rs","byte_start":27460,"byte_end":27470,"line_start":277,"line_end":277,"column_start":23,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":738},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/escape.rs","byte_start":34933,"byte_end":34938,"line_start":208,"line_end":208,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":125}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":38526,"byte_end":38534,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39325,"byte_end":39335,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":39616,"byte_end":39624,"line_start":66,"line_end":66,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40155,"byte_end":40166,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":838},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":40621,"byte_end":40628,"line_start":105,"line_end":105,"column_start":22,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":856},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":41583,"byte_end":41594,"line_start":140,"line_end":140,"column_start":6,"column_end":17},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":46934,"byte_end":46942,"line_start":328,"line_end":328,"column_start":23,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":773},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":47529,"byte_end":47541,"line_start":344,"line_end":344,"column_start":27,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":793},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":48612,"byte_end":48622,"line_start":371,"line_end":371,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":800},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":49633,"byte_end":49642,"line_start":397,"line_end":397,"column_start":27,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":807},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50016,"byte_end":50024,"line_start":408,"line_end":408,"column_start":23,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":814},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50159,"byte_end":50170,"line_start":414,"line_end":414,"column_start":23,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":838},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":50510,"byte_end":50517,"line_start":425,"line_end":425,"column_start":23,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":856},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51001,"byte_end":51013,"line_start":440,"line_end":440,"column_start":23,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":875},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51548,"byte_end":51559,"line_start":455,"line_end":455,"column_start":23,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":916},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":51815,"byte_end":51829,"line_start":464,"line_end":464,"column_start":23,"column_end":37},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":934},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":52362,"byte_end":52381,"line_start":480,"line_end":480,"column_start":23,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":958},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":52915,"byte_end":52935,"line_start":496,"line_end":496,"column_start":23,"column_end":43},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":976},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/generics.rs","byte_start":53224,"byte_end":53240,"line_start":506,"line_end":506,"column_start":23,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":993},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53568,"byte_end":53573,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53676,"byte_end":53681,"line_start":13,"line_end":13,"column_start":28,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53784,"byte_end":53789,"line_start":19,"line_end":19,"column_start":33,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53892,"byte_end":53897,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":53980,"byte_end":53985,"line_start":31,"line_end":31,"column_start":22,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54078,"byte_end":54083,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54159,"byte_end":54164,"line_start":43,"line_end":43,"column_start":18,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":54317,"byte_end":54322,"line_start":49,"line_end":49,"column_start":34,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1025},"to":{"krate":2,"index":1760}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ident.rs","byte_start":56756,"byte_end":56761,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1025},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57668,"byte_end":57671,"line_start":32,"line_end":32,"column_start":23,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57788,"byte_end":57791,"line_start":38,"line_end":38,"column_start":28,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":57909,"byte_end":57912,"line_start":44,"line_end":44,"column_start":24,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58035,"byte_end":58038,"line_start":50,"line_end":50,"column_start":29,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58158,"byte_end":58161,"line_start":56,"line_end":56,"column_start":21,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":58252,"byte_end":58255,"line_start":62,"line_end":62,"column_start":21,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1046},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":67349,"byte_end":67352,"line_start":410,"line_end":410,"column_start":23,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1046},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":69620,"byte_end":69625,"line_start":457,"line_end":457,"column_start":22,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/lit.rs","byte_start":70417,"byte_end":70424,"line_start":475,"line_end":475,"column_start":22,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":78589,"byte_end":78592,"line_start":305,"line_end":305,"column_start":23,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1253},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":78844,"byte_end":78853,"line_start":315,"line_end":315,"column_start":23,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1270},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79129,"byte_end":79139,"line_start":324,"line_end":324,"column_start":10,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79611,"byte_end":79620,"line_start":342,"line_end":342,"column_start":23,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1291},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":79892,"byte_end":79897,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1308},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":81819,"byte_end":81829,"line_start":393,"line_end":393,"column_start":10,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/mac.rs","byte_start":82883,"byte_end":82893,"line_start":425,"line_end":425,"column_start":23,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1393},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/derive.rs","byte_start":85119,"byte_end":85130,"line_start":81,"line_end":81,"column_start":23,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1511},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":89984,"byte_end":89989,"line_start":130,"line_end":130,"column_start":10,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91319,"byte_end":91324,"line_start":171,"line_end":171,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1555},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91442,"byte_end":91446,"line_start":177,"line_end":177,"column_start":10,"column_end":14},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/op.rs","byte_start":91675,"byte_end":91679,"line_start":187,"line_end":187,"column_start":23,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1606},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":93887,"byte_end":93891,"line_start":67,"line_end":67,"column_start":21,"column_end":25},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1741},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":94682,"byte_end":94693,"line_start":93,"line_end":93,"column_start":21,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1758},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":95265,"byte_end":95279,"line_start":115,"line_end":115,"column_start":6,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":108426,"byte_end":108428,"line_start":586,"line_end":586,"column_start":23,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1650},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":111805,"byte_end":111815,"line_start":673,"line_end":673,"column_start":23,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1722},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112009,"byte_end":112013,"line_start":681,"line_end":681,"column_start":23,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1741},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112331,"byte_end":112342,"line_start":692,"line_end":692,"column_start":23,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1758},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":112713,"byte_end":112727,"line_start":704,"line_end":704,"column_start":23,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1775},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":113131,"byte_end":113158,"line_start":717,"line_end":717,"column_start":23,"column_end":50},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1796},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114267,"byte_end":114278,"line_start":755,"line_end":755,"column_start":23,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1816},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114484,"byte_end":114510,"line_start":763,"line_end":763,"column_start":23,"column_end":49},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1833},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":114868,"byte_end":114880,"line_start":775,"line_end":775,"column_start":23,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1850},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":115262,"byte_end":115270,"line_start":787,"line_end":787,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1884},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116168,"byte_end":116177,"line_start":814,"line_end":814,"column_start":23,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1944},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116447,"byte_end":116455,"line_start":824,"line_end":824,"column_start":23,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1905},"to":{"krate":18,"index":38}},{"span":{"file_name":"/workspace/.cargo/registry/src/github.com-1ecc6299db9ec823/syn-0.11.11/src/ty.rs","byte_start":116736,"byte_end":116739,"line_start":835,"line_end":835,"column_start":23,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1924},"to":{"krate":18,"index":38}}]}